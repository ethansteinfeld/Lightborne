searchState.loadedDescShard("bevy", 2, "Sorts all query items into a new iterator with a key …\nAdds any component accesses used by this <code>WorldQuery</code> to …\nReturns the indices of the elements that this access …\nReturns the indices of the elements that this access …\nSets this as having mutable access to all indexed elements …\nSets the underlying unfiltered access as having mutable …\nMarks the set as writing all T.\nSets this as having mutable access to all components (i.e. …\nSets the underlying unfiltered access as having mutable …\nSets this as having mutable access to all resources (i.e. …\nA <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …\nA struct used to operate on reflected <code>Bundle</code> trait of a …\nThe raw function pointers needed to make up a <code>ReflectBundle</code>…\nAn extension trait for <code>EntityCommands</code> for reflection …\nA struct used to operate on reflected <code>Component</code> trait of a …\nThe raw function pointers needed to make up a …\nA struct used to operate on the reflected <code>FromWorld</code> trait …\nThe raw function pointers needed to make up a …\nFor a specific type of value, this maps any fields with …\nA struct used to operate on reflected <code>Resource</code> of a type.\nThe raw function pointers needed to make up a …\nFor a reflected value, apply an operation to all contained …\nFor a reflected value, apply an operation to mutable …\nUses reflection to set the value of this <code>Bundle</code> type in …\nFunction pointer implementing <code>ReflectBundle::apply</code>.\nFunction pointer implementing <code>ReflectComponent::apply()</code>.\nFunction pointer implementing <code>ReflectResource::apply()</code>.\nUses reflection to set the value of this <code>Bundle</code> type in …\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing <code>ReflectComponent::contains()</code>.\nFunction pointer implementing <code>ReflectComponent::copy()</code>.\nFunction pointer implementing <code>ReflectResource::copy()</code>.\nThe underlying function pointers implementing methods on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>T</code> from a <code>&amp;dyn PartialReflect</code>.\nFunction pointer implementing …\nInsert a reflected <code>Bundle</code> into the entity like <code>insert()</code>.\nFunction pointer implementing <code>ReflectBundle::insert</code>.\nFunction pointer implementing <code>ReflectComponent::insert()</code>.\nFunction pointer implementing <code>ReflectResource::insert()</code>.\nAdds the given boxed reflect component or bundle to the …\nSame as <code>insert_reflect</code>, but using the <code>T</code> resource as type …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA general method for remapping entities in a reflected …\nCreate a custom implementation of <code>ReflectBundle</code>.\nGet the default set of <code>ReflectBundleFns</code> for a specific …\nGet the default set of <code>ReflectComponentFns</code> for a specific …\nGet the default set of <code>ReflectFromWorldFns</code> for a specific …\nGet the default set of <code>ReflectResourceFns</code> for a specific …\nFunction pointer implementing <code>ReflectComponent::reflect()</code>.\nFunction pointer implementing <code>ReflectResource::reflect()</code>.\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing …\nRemoves this <code>Bundle</code> type from the entity. Does nothing if …\nFunction pointer implementing <code>ReflectBundle::remove</code>.\nFunction pointer implementing <code>ReflectComponent::remove()</code>.\nFunction pointer implementing <code>ReflectResource::remove()</code>.\nRemoves from the entity the component or bundle with the …\nSame as <code>remove_reflect</code>, but using the <code>T</code> resource as type …\nRemoves all components in the <code>Bundle</code> from the entity and …\nFunction pointer implementing <code>ReflectBundle::take</code>.\nA general method for applying an operation to all entities …\nA general method for applying an operation to all entities …\nWrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …\nStores the <code>RemovedComponents</code> event buffers for all types …\nWrapper around a <code>EventCursor&lt;RemovedComponentEntity&gt;</code> so …\nA <code>SystemParam</code> that yields entities that had their <code>T</code> …\nIterator over entities that had a specific component …\nIterator over entities that had a specific component …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGets the event storage for a given component.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over components and their entity …\nCreates an empty storage buffer for component removal …\nSends a removal event for the specified component.\nFor each type of component, swaps the event buffers and …\nSystems with conflicting access have indeterminate run …\nCombines the outputs of two systems using the <code>&amp;&amp;</code> operator.\nA <code>SystemSet</code> implicitly created when using …\nA type-erased run condition stored in a <code>Box</code>.\nChain systems into dependencies\nA system that determines if one or more scheduled systems …\nConfiguration for a tuple of nested <code>Configs</code> instances.\nConfiguration for a tuple of nested <code>Configs</code> instances.\nConfiguration for a tuple of nested <code>Configs</code> instances.\nTried to order a system (set) relative to a system set it …\nA directed acyclic graph structure.\nThe dependency graph contains a cycle.\nA system (set) has been told to run before itself.\nAn object safe version of <code>Eq</code>. This trait is automatically …\nOccurrences are logged and result in errors.\nSpecifies how a <code>Schedule</code> will be run.\nThe hierarchy of system sets contains a cycle.\nA system set contains itself.\nThe hierarchy of system sets contains redundant edges.\nOccurrences are completely ignored.\nA shorthand for <code>Interned&lt;dyn ScheduleLabel&gt;</code>.\nA shorthand for <code>Interned&lt;dyn SystemSet&gt;</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nSpecifies how schedule construction should respond to …\nNew-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …\nRuns the schedule using a thread pool. Non-conflicting …\nRuns the schedule using a thread pool. Non-conflicting …\nCombines and inverts the outputs of two systems using the …\nNodes are allowed to run in any order.\nStores configuration for a single generic node (a system …\nConfiguration for a single node.\nConfiguration for a single node.\nConfiguration for a single node.\nA collections of generic <code>NodeConfig</code>s.\nUnique identifier for a system or system set stored in a …\nCombines and inverts the outputs of two systems using the …\nInvokes <code>Not</code> with the output of another system.\nCombines the outputs of two systems using the <code>||</code> operator.\nA collection of systems, and the metadata and executor …\nCategory of errors encountered during schedule …\nSpecifies miscellaneous settings for schedule construction.\nMetadata for a <code>Schedule</code>.\nA strongly-typed class of labels used to identify a …\nDerive macro generating an impl of the trait <code>ScheduleLabel</code>.\nError to denote that <code>Schedule::initialize</code> or <code>Schedule::run</code> …\nResource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s …\nIdentifier for a system set.\nThe type of <code>SystemSet</code> this instance converts into.\nTried to order system sets that share systems.\nLike <code>SingleThreaded</code> but calls <code>apply_deferred</code> immediately …\nA variant of <code>SingleThreadedExecutor</code> that calls …\nRuns the schedule using a single thread.\nRuns the schedule using a single thread.\nResource for controlling system stepping behavior\nIdentifier for a system.\nStores configuration for a single system.\nA collection of <code>SystemConfig</code>.\nHolds systems and conditions of a <code>Schedule</code> sorted in …\nTypes that identify logical groups of systems.\nDerive macro generating an impl of the trait <code>SystemSet</code>.\nA <code>SystemSet</code> with scheduling metadata.\nA collection of <code>SystemSetConfig</code>.\nA <code>SystemSet</code> grouping instances of the same function.\nTried to order a system (set) relative to all instances of …\nTried to run a schedule before all of its systems have …\nOccurrences are logged only.\nCombines and inverts the outputs of two systems using the <code>^</code>…\nCombines the outputs of two systems using the <code>^</code> operator.\nRun nodes in order. If there are deferred parameters in …\nRun nodes in order. This will not add <code>apply_deferred</code> …\nEnable stepping for the provided schedule\nRun after all systems in <code>set</code>. If <code>set</code> has any systems that …\nRuns before all systems in <code>set</code>. If <code>set</code> has any systems …\nRun after all systems in <code>set</code>.\nRun after all systems in <code>set</code>.\nEnsure this system always runs when stepping is enabled\nEnsure this system instance always runs when stepping is …\nDetermines whether the presence of ambiguities (systems …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nReturns a new run condition that only returns <code>true</code> if both …\nReturns a new run condition that only returns <code>true</code> if both …\nInstructs the executor to call <code>System::apply_deferred</code> on …\nCasts the type to <code>dyn Any</code>.\nCasts this value to a form where it can be compared with …\nCasts this value to a form where it can be compared with …\nAuto insert <code>apply_deferred</code> systems into the schedule, when …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRun before all systems in <code>set</code>.\nRun before all systems in <code>set</code>.\nSystem to call denoting that a new render frame has begun\nBuild a <code>SystemSchedule</code> optimized for scheduler access from …\nA cached topological ordering of the graph.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of system sets.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of systems.\nClear a breakpoint for the system\nclear a breakpoint for system instance\nclear a breakpoint for system instance\nClear behavior set for all systems in the provided <code>Schedule</code>\nClear any behavior set for the system\nA collection of run conditions that may be useful in any …\nReturns the list of systems that conflict with each other, …\nconvert conflicts to human readable format\nReturns <code>true</code> if the given system set is part of the graph. …\nRun all remaining systems in the stepping frame during the …\nReturn our current position within the stepping frame\nReturns the <code>Dag</code> of the dependencies in the schedule.\nDisable stepping, resume normal systems execution\nAdd a run condition to each contained system.\nClones this <code>ScheduleLabel</code>.\nClones this <code>SystemSet</code>.\nThis method tests for <code>self</code> and <code>other</code> values to be equal.\nFeeds this value into the given <code>Hasher</code>.\nFeeds this value into the given <code>Hasher</code>.\nBegin stepping at the start of the next frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nReturns the set at the given <code>NodeId</code>, if it exists.\nReturns the system at the given <code>NodeId</code>, if it exists.\nThe directed graph of the stored systems, connected by …\nReturns the <code>Dag</code> of the hierarchy.\nDetermines whether the presence of redundant edges in the …\nList of <code>ComponentId</code>s to ignore when reporting system order …\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nAdds a new boxed system set to the systems.\nInitializes any newly-added systems and conditions by …\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a <code>SystemConfigs</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nCheck if stepping is enabled\nReturns <code>true</code> if the identified node is a system set.\nReturns <code>true</code> if the identified node is a system.\nReturns a new run condition that only returns <code>false</code> if …\nEnsure this system never runs when stepping is enabled\nEnsure this system instance never runs when stepping is …\nCreates a new <code>multi_threaded</code> executor for use with a …\nCreates a new executor that can be used to run systems on …\nCreates a new simple executor for use in a <code>Schedule</code>. This …\nCreates a new single-threaded executor for use in a …\nCreates an empty <code>SystemSchedule</code>.\nCreates an empty <code>ScheduleGraph</code> with default settings.\nDefault build settings. See the field-level documentation …\nCreate a new instance of the <code>Stepping</code> resource.\nReturns a new run condition that only returns <code>true</code> if both …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nDisable stepping for the provided schedule\nIf set to true, report all system sets the conflicting …\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nAdds a new boxed run condition to the systems.\nReturn the list of schedules with stepping enabled in the …\nReturns the set at the given <code>NodeId</code>.\nAdd a breakpoint for system\nAdd a breakpoint for system instance\nget the list of systems this schedule should skip for this …\nRun the next system during the next render frame\nReturns the system at the given <code>NodeId</code>.\nReturns an iterator over all system sets in this schedule, …\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nReturns an iterator over all systems in this schedule, …\nIf set to true, node names will be shortened instead of …\nReturns a new run condition that only returns <code>true</code> if <code>self</code> …\nReturns a new run condition that only returns <code>true</code> if …\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nGenerates a <code>Condition</code> that returns true when the passed …\nGenerates a <code>Condition</code> that returns true when the result of …\nGenerates a <code>Condition</code> that inverses the result of passed …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> on the …\nA type-erased contiguous container for data of a …\nA sparse data structure of <code>Component</code>s.\nThe type-erased backing storage and metadata for a single …\nThe backing store for all <code>Resource</code>s stored in the <code>World</code>.\nA data structure that blends dense and sparse storage\nRepresents something that can be stored in a <code>SparseSet</code> as …\nA collection of <code>ComponentSparseSet</code> storages, indexed by …\nThe raw data stores of a <code>World</code>\nA column-oriented structure-of-arrays based storage for …\nAn opaque unique ID for a <code>Table</code> within a <code>World</code>.\nA opaque newtype for rows in <code>Table</code>s. Specifies a single …\nA collection of <code>Table</code> storages, indexed by <code>TableId</code>\nVery similar to a normal <code>Column</code>, but with the capacities …\nGets the underlying table index from the ID.\nGets the index of the row as a <code>usize</code>.\nGets the underlying table index from the ID.\nGets the index of the row as a <code>usize</code>.\nGet the capacity of this table, in entities. Note that if …\nReturns the total number of elements the <code>SparseSet</code> can …\nClears all resources.\nClears all of the elements from the sparse set.\nClears the column, removing all values.\nGets the number of components being stored in the table.\nReturns <code>true</code> if the sparse set has a component value for …\nReturns <code>true</code> if the sparse set contains a value for <code>index</code>.\nThe <code>TableId</code> of the <code>Table</code> without any components.\nFetches a read-only slice of the entities stored within …\nGets the maximum number of entities the table can …\nGets the number of entities currently being stored in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>TableId</code>.\nCreates a <code>TableRow</code>.\nCreates a new <code>TableId</code>.\nCreates a <code>TableRow</code> from a <code>usize</code> index.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nFetches a <code>Table</code> by its <code>TableId</code>.\nGets read-only access to a resource, if it exists.\nReturns a reference to the entity’s component value.\nReturns a reference to the value for <code>index</code>.\nGets a reference to the <code>ComponentSparseSet</code> of a <code>ComponentId</code>…\nFetches a reference to the data and change detection ticks …\nGet the specific <code>added tick</code> of the component matching …\nReturns a reference to the “added” tick of the entity…\nFetches the “added” change detection tick for the …\nFetches the “added” change detection tick for the …\nGet a slice to the added <code>ticks</code> in this <code>ThinColumn</code>.\nFetches the slice to the <code>Column</code>’s “added” change …\nGet the added ticks of the column matching <code>component_id</code> as …\nGet the specific <code>change tick</code> of the component matching …\nReturns a reference to the “changed” tick of the entity…\nFetches the “changed” change detection tick for the …\nFetches the “changed” change detection tick for the …\nGet a slice to the changed <code>ticks</code> in this <code>ThinColumn</code>.\nFetches the slice to the <code>Column</code>’s “changed” change …\nGet the changed ticks of the column matching <code>component_id</code> …\nFetches a read-only reference to the <code>ThinColumn</code> for a …\nGet the component at a given <code>row</code>, if the <code>Table</code> stores …\nReturns a reference to the resource, if it exists.\nFetches a read-only reference to the data at <code>row</code>.\nFetches a mutable reference to the data at <code>row</code>.\nFetches the data pointer to the first element of the <code>Column</code>…\nGet a slice to the data stored in this <code>ThinColumn</code>.\nFetches the slice to the <code>Column</code>’s data cast to a given …\nGet the data of the column matching <code>component_id</code> as a …\nFetches a read-only reference to the data at <code>row</code>. Unlike …\nGet the drop function for some component that is stored in …\nReturns a mutable reference to the value for <code>index</code>.\nReturns a reference to the value for <code>index</code>, inserting one …\nCreates a new instance of this type with the specified …\nReturns a reference to the resource’s change ticks, if …\nReturns a reference to the “added” and “changed” …\nFetches the change detection ticks for the value at <code>row</code>.\nGet the <code>ComponentTicks</code> of the component matching …\nFetches the change detection ticks for the value at <code>row</code>. …\nReturns references to the entity’s component value and …\nChecks if the table contains a <code>ThinColumn</code> for a given …\nGets the <code>ArchetypeComponentId</code> for the resource.\nReturns an iterator visiting all keys (indices) in …\nInserts <code>value</code> at <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the <code>Table</code> is empty or not.\nReturns true if this collection contains no <code>Table</code>s\nReturns true if there are no resources stored in the <code>World</code>,\nReturns <code>true</code> if the sparse set contains no component …\nReturns <code>true</code> if the sparse set contains no elements.\nReturns true if this collection contains no …\nChecks if the column is empty. Returns <code>true</code> if there are …\nReturns true if the resource is populated.\nFetches the <code>Layout</code> for the underlying type.\nIterates through all of the tables stored within in <code>TableId</code>…\nIterate over all resources that have been initialized, …\nReturns an iterator visiting all key-value pairs in …\nAn Iterator visiting all (<code>ComponentId</code>, <code>ComponentSparseSet</code>) …\nIterates over the <code>ThinColumn</code>s of the <code>Table</code>.\nReturns an iterator visiting all key-value pairs in …\nReturns the number of <code>Table</code>s this collection contains\nThe total number of resources stored in the <code>World</code>\nReturns the number of component values in the sparse set.\nReturns the number of elements in the sparse set.\nReturns the number of <code>ComponentSparseSet</code>s this collection …\nGets the current number of elements stored in the column.\nCreates a new <code>SparseSet</code>.\nBacking storage for <code>!Send</code> resources.\nRemoves and returns the value for <code>index</code>.\nBacking storage for resources.\nGets the sparse set index corresponding to this instance.\nBacking storage for <code>SparseSet</code> components.\nBacking storage for <code>Table</code> components.\nReturns an iterator visiting all values in arbitrary order.\nReturns an iterator visiting all values mutably in …\nCreate a new <code>ThinColumn</code> with the given <code>capacity</code>.\nCreates a new <code>SparseSet</code> with a specified initial capacity.\nCustomizes the behavior of an <code>AdapterSystem</code>\nA <code>System</code> that takes the output of <code>S</code> and transforms it by …\nA convenience type alias for a boxed <code>System</code> trait object.\nA cached <code>SystemId</code> distinguished by the unique function …\nA <code>System</code> defined by combining two other systems. The …\nCustomizes the behavior of a <code>CombinatorSystem</code>.\nA <code>Command</code> queue to perform structural changes to the <code>World</code>.\nA <code>SystemParam</code> that stores a buffer which gets applied to …\nA <code>SystemParamBuilder</code> for a <code>DynSystemParam</code>. See the …\nA <code>SystemParam</code> with a type that can be configured at …\nThe <code>SystemParam::State</code> for a <code>DynSystemParam</code>.\nA <code>Command</code> which gets executed for a given <code>Entity</code>.\nA list of commands that will be run to modify an entity.\nA wrapper around <code>EntityCommands</code> with convenience methods …\nA function system that runs with exclusive <code>World</code> access.\nA parameter that can be used in an exclusive system (a …\nA trait implemented for all exclusive system functions …\nShorthand way of accessing the associated type …\nA <code>SystemParamBuilder</code> for a <code>FilteredResourcesMut</code>. See the …\nA <code>SystemParamBuilder</code> for a <code>FilteredResources</code>. See the …\nThe <code>System</code> counter part of an ordinary function.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives an …\nThe input type for an <code>AdapterSystem</code>.\nThe input type for a <code>CombinatorSystem</code>.\nThe input type to this system. See <code>System::In</code>.\nThe input type of this system. See <code>System::In</code>.\nThe system’s input.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nThe inner input type that is passed to functions that run …\nAn <code>IntoSystem</code> creating an instance of <code>AdapterSystem</code>.\nImplemented for systems that convert into <code>ObserverSystem</code>.\nAn <code>IntoSystem</code> creating an instance of <code>PipeSystem</code>.\nConversion trait to turn something into a <code>System</code>.\nSystem could not be run due to parameters that failed …\nSystem could not be run due to parameters that failed …\nThe item type returned when constructing this system param.\nThe item type returned when constructing this system param.\nA system local <code>SystemParam</code>.\nA <code>SystemParamBuilder</code> for a <code>Local</code>. The provided value will …\nNo warning should ever be emitted.\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nImplemented for <code>System</code>s that have a <code>Trigger</code> as the first …\nThe warning will be emitted once and status will update to …\nThe output type for an <code>AdapterSystem</code>.\nThe output type for a <code>CombinatorSystem</code>.\nThe return type of this system. See <code>System::Out</code>.\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nStop app with a panic.\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe wrapper input type that is defined as the first …\nThe <code>ExclusiveSystemParam</code>’s defined by this system’s <code>fn</code> …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA <code>SystemParamBuilder</code> for any <code>SystemParam</code> that uses its …\nA collection of potentially conflicting <code>SystemParam</code>s …\nA <code>SystemParamBuilder</code> for a <code>ParamSet</code>.\nState machine for emitting warnings when system params are …\nA <code>System</code> created by piping the output of the first system …\nSystem parameter that works very much like <code>Query</code> except it …\nSystem parameter that provides selective access to the …\nType returned from <code>Query::transmute_lens</code> containing the …\nA <code>SystemParamBuilder</code> for a <code>Query</code>. This takes a closure …\n<code>System</code> types that do not modify the <code>World</code> when run. This …\nA <code>SystemParam</code> that only reads a given <code>World</code>.\nA system tried to run itself recursively.\nThe <code>Command</code> type for registering one shot systems from …\nAn operation with stored systems failed.\nA system that has been removed from the registry. It …\nShared borrow of a <code>Resource</code>.\nUnique mutable borrow of a <code>Resource</code>.\nA type that can be inserted into a <code>World</code> as a singleton.\nThe <code>Command</code> type for <code>World::run_system</code>.\nThe <code>Command</code> type for running a cached one-shot system from …\nRunning system failed.\nTrait used to run a system immediately on a <code>World</code>.\nThe <code>Command</code> type for <code>World::run_system</code> or …\nA system tried to remove itself.\nSystem parameter that provides access to single entity’s …\nUsed to store data which persists across invocations of a …\nUsed to store data which persists across invocations of a …\nA helper for using <code>SystemInput</code>s in generic contexts.\nA helper for using system parameters in generic contexts\nAn ECS system that can be added to a <code>Schedule</code>\nThe type of <code>System</code> that this instance converts into.\nThe type of <code>System</code> that this instance converts into.\nTypes that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …\nA <code>SystemParam</code> that reads the previous and current change …\nAn identifier for a registered system.\nMarker <code>Component</code> for identifying <code>SystemId</code> <code>Entity</code>s.\nA system was run by id, but no system with that id was …\nShorthand way to get the <code>System::In</code> for a <code>System</code> as a …\nTrait for types that can be used as input to <code>System</code>s.\nThe metadata of a <code>System</code>.\n<code>SystemParam</code> that returns the name of the system which it …\nA cached system was removed by value, but no system with …\nA parameter that can be used in a <code>System</code>.\nImplement <code>SystemParam</code> to use a struct as a parameter in a …\nA builder that can create a <code>SystemParam</code>.\nA trait implemented for all functions that can be used as …\nShorthand way of accessing the associated type …\nHolds on to persistent state required to drive <code>SystemParam</code> …\nThe <code>Command</code> type for unregistering one-shot systems from …\nWhen used in an <code>AdapterSystem</code>, this function customizes …\nModify the component <code>T</code> if it exists, using the function …\nExecutes this command for the given <code>Entity</code>.\nApplies any deferred mutations to the <code>World</code>.\nApplies all state queued up for <code>SystemParam</code> values. For …\nApplies any deferred mutations stored in this <code>SystemParam</code>…\nApplies any <code>Deferred</code> system parameters (or other system …\nReturns the system’s archetype component <code>Access</code>.\nArchetype component access that is used to determine which …\nReturns a mutable reference to the <code>Access</code> for …\nEnsure that a given function is a read-only system.\nEnsure that a given function is a system.\nEnsures that the provided system doesn’t conflict with …\nRegisters any <code>World</code> access used by this <code>SystemParam</code> and …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>SystemState</code> from a <code>SystemParamBuilder</code>. To create …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nCreate a <code>FunctionSystem</code> from a <code>SystemState</code>. This method …\nChecks any <code>Tick</code>s stored on this system and wraps their …\nClone the combined system. The cloned instance must be …\nWhen used in a <code>CombinatorSystem</code>, this function customizes …\nReturns the system’s component <code>Access</code>.\nReturns a reference to the <code>FilteredAccessSet</code> for …\nReturns a mutable reference to the <code>FilteredAccessSet</code> for …\nReturns the system’s default system sets.\nReturns the inner system param if it is the correct type. …\nReturns the inner system parameter if it is the correct …\nReturns the inner system parameter if it is the correct …\nTransforms a <code>SystemId</code> into the <code>Entity</code> that holds the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>SystemId</code> from an <code>Entity</code>. Useful when you only have …\nCreates <code>Self</code> using <code>default()</code>.\nRetrieve the <code>SystemParam</code> values. This can only be called …\nGets the tick indicating the last time this system ran.\nRetrieve the <code>SystemParam</code> values. This can only be called …\nRetrieve the mutable <code>SystemParam</code> values.  This will not …\nRetrieve the mutable <code>SystemParam</code> values.\nCreates a parameter to be passed into a <code>SystemParamFunction</code>…\nCreates a parameter to be passed into an …\nRetrieve the <code>SystemParam</code> values. This will not update …\nReturns true if system has deferred buffers.\nReturns true if the system has deferred <code>SystemParam</code>’s\nCreates a new instance of this param’s <code>State</code>.\nRegisters any <code>World</code> access used by this <code>SystemParam</code> and …\nInitialize the system.\nIs the system initialized? A system is initialized the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the value of the parameter\nTurns this value into its corresponding <code>System</code>.\nTurns this value into its corresponding <code>System</code>.\nReturns <code>true</code> if the inner system param is the same as <code>T</code>.\nReturns true if the system must be run exclusively.\nReturns true if the system is <code>Send</code>.\nReturns true if the system is <code>Send</code>.\nReturns the <code>World</code> change tick seen by the system the …\nContains type aliases for built-in <code>SystemParam</code>s with …\nHelper method for adding a <code>Local</code> as a param, equivalent to …\nPass the output of this system into the passed function <code>f</code>, …\nReturns <code>true</code> if <code>world_id</code> matches the <code>World</code> that was used …\nGets the metadata for this instance.\nReturns the system’s name.\nReturns the system’s name\nGets the name of the system.\nCreates a <code>SystemParamBuilder</code> for a <code>Query</code> that accepts a …\nCreates a new <code>DynParamBuilder</code> by wrapping a …\nCreates a <code>SystemParamBuilder</code> for a <code>FilteredResources</code> that …\nCreates a <code>SystemParamBuilder</code> for a <code>FilteredResourcesMut</code> …\nCreates a new system that combines two inner systems.\nCreates a new <code>IntoSystem</code> that pipes two inner systems.\nCreates a new system that pipes two inner systems.\nCreates a new <code>SystemState</code> with default state.\nCreates a new <code>Command</code> struct, which can be added to …\nCreates a new <code>Command</code> struct, which can be added to …\nCreates a new <code>Command</code> struct, which can be added to …\nCreates a new <code>IntoSystem</code> that uses <code>func</code> to adapt <code>system</code>, …\nCreates a new <code>System</code> that uses <code>func</code> to adapt <code>system</code>, via …\nCreates a new <code>Command</code> struct, which can be added to …\nFor the specified <code>Archetype</code>, registers the components …\nCreates a <code>SystemParamBuilder</code> for a <code>Query</code> that accepts a …\nCreates a <code>SystemParamBuilder</code> for a <code>FilteredResources</code> that …\nCreates a <code>SystemParamBuilder</code> for a <code>FilteredResourcesMut</code> …\nCreates a new <code>Command</code> struct, which can be added to …\nCreates a <code>SystemParamBuilder</code> for any <code>SystemParam</code> that uses …\nInsert <code>T::default</code> into this entity, if <code>T</code> is not already …\nInsert <code>T::from_world</code> into this entity, if <code>T</code> is not already …\nInsert <code>default</code> into this entity, if <code>T</code> is not already …\nInsert the value returned from <code>default</code> into this entity, …\nInsert <code>default</code> into this entity, if <code>T</code> is not already …\nInsert the value returned from <code>default</code> into this entity, …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nCreate a <code>Query</code> from the underlying <code>QueryState</code>.\nHelper method for adding a <code>Query</code> as a param, equivalent to …\nHelper method for adding a filtered <code>Query</code> as a param, …\nQueues any deferred mutations to be applied at the next …\nQueues any deferred mutations to be applied at the next …\nEnqueues any <code>Deferred</code> system parameters (or other system …\nHelper method for reading a <code>Resource</code> as a param, …\nHelper method for mutably accessing a <code>Resource</code> as a param, …\nExecutes this system once. See <code>System::run</code>.\nExecutes this system once. See <code>System::run</code> or …\nRuns the system with the given input in the world.\nRuns this system with the given input in the world.\nTries to run a system and apply its deferred parameters.\nTries to run a system with given input and apply deferred …\nRuns the system with the given input in the world. Unlike …\nMarks the system as having deferred buffers like <code>Commands</code> …\nOverwrites the tick indicating the last time this system …\nSets the name of this system.\nSets the system to be not <code>Send</code>.\nThe system removed from the storage.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nReturns the current <code>World</code> change tick seen by the system.\nEmits a warning about inaccessible system param if policy …\nReturns the <code>TypeId</code> of the underlying system type.\nUpdate the system’s archetype component <code>Access</code>.\nUpdates the state’s internal view of the <code>World</code>’s …\nUpdates the state’s internal view of the <code>world</code>’s …\nWrapper over <code>SystemParam::validate_param</code>.\nValidates that the param can be acquired by the <code>get_param</code>. …\nSafe version of <code>System::validate_param_unsafe</code>. that runs …\nValidates that all parameters can be acquired and that …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nReturn this system with a new name.\nReturn this system with a new name.\nConverts a <code>SystemInput::Inner</code> into a <code>SystemInput::Param</code>.\nA shorthand for writing <code>&amp;&#39;static T</code>.\n<code>Commands</code> with <code>&#39;static</code> lifetimes.\nA <code>Query</code> with <code>&#39;static</code> lifetimes.\nA <code>Res</code> with <code>&#39;static</code> lifetimes.\nA <code>ResMut</code> with <code>&#39;static</code> lifetimes.\nA shorthand for writing <code>&amp;&#39;static mut T</code>.\nA component that can point to another entity, and which …\nReturns the next entity to visit.\nThe (arbitrarily chosen) minimum number of world tick …\nA <code>World</code> mutation.\nDensely and efficiently stores a queue of heterogenous …\nThe mutable reference type returned by …\nA <code>World</code> reference that disallows structural ECS changes. …\nTypes that can be used to fetch components from an entity …\nProvides mutable access to a single entity and all of its …\nProvides mutable access to all components of an entity, …\nA read-only reference to a particular <code>Entity</code> and all of …\nProvides read-only access to a single entity and all its …\nA mutable reference to a particular <code>Entity</code>, and the entire …\nA view into a single entity and component in a world, …\nProvides mutable access to a single entity and some of its …\nProvides read-only access to a single entity and some of …\nProvides read-only access to a set of <code>Resource</code>s defined by …\nBuilder struct to define the access for a <code>FilteredResources</code>…\nProvides mutable access to a set of <code>Resource</code>s defined by …\nBuilder struct to define the access for a …\nCreates an instance of the type this trait is implemented …\nError indicating that the filtered entity does not have …\nError indicating that the filtered entity does not have …\nUnique mutable borrow of an entity’s component or of a …\nThe mutable reference type returned by …\nThe mutable reference type returned by …\n<code>ComponentId</code> for <code>OnAdd</code>\n<code>ComponentId</code> for <code>OnInsert</code>\n<code>ComponentId</code> for <code>OnRemove</code>\n<code>ComponentId</code> for <code>OnReplace</code>\nAn occupied entry.\nA view into an occupied entry in a <code>EntityWorldMut</code>. It is …\nTrigger emitted when a component is added to an entity. …\nTrigger emitted when a component is inserted onto an …\nTrigger emitted when a component is removed from an …\nTrigger emitted when a component is replaced on an entity. …\nShared borrow of an entity’s component with access to …\nThe read-only reference type returned by …\nThe read-only reference type returned by …\nAn iterator that spawns a series of entities and returns …\nError type returned by <code>TryFrom</code> conversions from filtered …\nA vacant entry.\nA view into a vacant entry in a <code>EntityWorldMut</code>. It is part …\nStores and exposes operations on entities, components, …\nTypes that can be used to fetch <code>Entity</code> references from a …\nA unique identifier for a <code>World</code>.\nReturns a reference to the underlying <code>Access</code>.\nReturns a reference to the underlying <code>Access</code>.\nReturns a reference to the underlying <code>Access</code>.\nReturns a reference to the underlying <code>Access</code>.\nAdd accesses required to read the resource of the given …\nAdd accesses required to read the resource of the given …\nAdd accesses required to read all resources.\nAdd accesses required to read all resources.\nAdd accesses required to read the resource with the given …\nAdd accesses required to read the resource with the given …\nAdd accesses required to get mutable access to the …\nAdd accesses required to get mutable access to all …\nAdd accesses required to get mutable access to the …\nProvides in-place mutable access to an occupied entry.\nTake all commands from <code>other</code> and append them to <code>self</code>, …\nApplies this command, causing it to mutate the provided …\nExecute the queued <code>Command</code>s in the world after applying …\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nGets read-only access to all of the entity’s components.\nGets read-only access to all of the entity’s components, …\nCreate an <code>Access</code> that represents the accesses of the …\nCreate an <code>Access</code> that represents the accesses of the …\nCreates a <code>Commands</code> instance that pushes to the world’s …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>EntityMut</code>s that expose read and write operations …\nContains error types returned by bevy’s schedule.\nReturns mutable reference(s) to the entities with the …\nReturns mutable reference(s) to the entities with the …\nReturns untyped mutable reference(s) to the component(s) …\nReturns read-only reference(s) to the entities with the …\nReturns untyped read-only reference(s) to the component(s) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using data from the given <code>World</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGets a reference to the component in the entry.\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>C</code> for the current …\nGets access to the component of type <code>C</code> for the current …\nGets the component of the given <code>ComponentId</code> from the …\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nReturns <code>EntityMut</code>s that expose read and write operations …\nRetrieves a mutable reference to the given <code>entity</code>’s …\nGets a mutable reference to the component in the entry.\nGets mutable access to the component of type <code>T</code> for the …\nGets mutable access to the component of type <code>C</code> for the …\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nGets a <code>!Send</code> resource to the resource with the id …\nGets a mutable reference to the non-send resource of the …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>C</code> for the current …\nGets access to the component of type <code>C</code> for the current …\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nReplaces the component of the entry.\nInserts the component into the <code>VacantEntry</code> and returns a …\nReplaces the component of the entry, and returns an …\nInserts the component into the <code>VacantEntry</code> and returns an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nConsumes self and gets mutable access to the component of …\nReturns false if there are any commands in the queue\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nCreates a new builder with no access.\nCreates a new builder with no access.\nCreate a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …\nGets a mutable reference to the non-send resource of the …\nEnsures the entry has this component by inserting the …\nEnsures the entry has this component by inserting the …\nEnsures the entry has this component by inserting the …\nPush a <code>Command</code> onto the queue.\nReturns <code>Query</code> for the given <code>QueryState</code>, which is used to …\nReborrow self as a new instance of <code>DeferredWorld</code>\nReturns a new instance with a shorter lifetime. This is …\nReturns a new instance with a shorter lifetime.\nProvides additional functionality for <code>World</code> when the …\nGets a mutable reference to the resource of the given type\nSends an <code>Event</code>. This method returns the ID of the sent …\nSends a batch of <code>Event</code>s from an iterator. This method …\nSends the default value of the <code>Event</code> of type <code>E</code>. This …\nRemoves the component from the entry and returns it.\nSends a “global” <code>Trigger</code> without any targets.\nSends a <code>Trigger</code> with the given <code>targets</code>.\nContains types that allow disjoint mutable access to a …\nThe component with the given <code>ComponentId</code> was requested …\nThe entity with the given ID was requested mutably more …\nAn error that occurs when dynamically retrieving …\nAn error that occurs when fetching entities mutably from a …\nThe component with the given <code>ComponentId</code> does not exist on …\nThe entity with the given ID does not exist.\nThe error type returned by <code>World::try_run_schedule</code> if the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe given <code>Entity</code> does not have a <code>Component</code> corresponding …\nThe error type returned by <code>World::get_reflect</code> and …\nThe <code>World</code> was missing the <code>AppTypeRegistry</code> resource.\nThe <code>World</code>’s <code>TypeRegistry</code> did not contain <code>TypeData</code> for …\nThere is no <code>ComponentId</code> corresponding to the given <code>TypeId</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>ComponentId</code> corresponding to the given <code>TypeId</code>.\nThe name corresponding to the <code>Component</code> with the given …\nThe given <code>Entity</code>.\nThe given <code>TypeId</code>.\nA interior-mutable reference to a particular <code>Entity</code> and …\nVariant of the <code>World</code> where resource and component accesses …\nReturns the archetype that the current entity belongs to.\nRetrieves this world’s <code>Archetypes</code> collection.\nRetrieves this world’s <code>Bundles</code> collection.\nGets the current change tick of this world.\nRetrieves this world’s <code>Components</code> collection.\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component with …\nRetrieves this world’s <code>Entities</code> collection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves an <code>UnsafeEntityCell</code> that exposes read and write …\nSafety\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nGets a reference to the non-send resource of the given …\nGets a <code>!Send</code> resource to the resource with the id …\nGets a mutable reference to the non-send resource of the …\nGets a <code>!Send</code> resource to the resource with the id …\nSafety\nGets a reference to the resource of the given type if it …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a reference including change detection to the …\nRetrieves this world’s unique ID.\nReturns the ID of the current entity.\nIncrements the world’s current change tick and returns …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn self into a <code>DeferredWorld</code>\nReturns the <code>Tick</code> indicating the last time that …\nReturns the id of the last ECS event that was fired. Used …\nGets metadata indicating the location where the current …\nRetrieves this world’s collection of removed components.\nProvides unchecked access to the internal data stores of …\nGets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …\nGets the world that the current entity belongs to.\nGets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …\nGets a mutable reference to the <code>World</code> this <code>UnsafeWorldCell</code> …\nPlugin that provides gamepad handling to an <code>App</code>.\nUpdates the running gamepad rumble effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA extension trait adding <code>App::init_gizmo_group</code> and …\nA <code>Plugin</code> that provides an immediate mode drawing api for …\nSystem set label for the systems handling the rendering of …\nA gizmo asset that represents a line.\nAdds gizmos to the <code>Transparent2d</code> render phase\nAdds gizmos to the <code>Transparent3d</code> render phase\nSystem set for updating the rendering meshes for drawing …\nA module adding debug visualization of <code>Aabb</code>s.\nAdditional <code>Gizmos</code> Functions – Arcs\nAdditional <code>Gizmos</code> Functions – Arrows\nAdditional <code>Gizmos</code> Functions – Circles\nClear out the contextual gizmos.\nCollect the requested gizmos into a specific clear context.\nColors of the gizmo’s vertices\nA module for the <code>GizmoConfig&lt;T&gt;</code> <code>Resource</code>.\nThe type of the gizmo’s configuration group\nAdditional <code>Gizmos</code> Functions – Crosses\nAdditional <code>Gizmos</code> Functions – Curves\nEnd this gizmo clearing context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nA module for the <code>Gizmos</code> <code>SystemParam</code>.\nAdditional <code>Gizmos</code> Functions – Grids\nRegisters <code>GizmoConfigGroup</code> in the app enabling the use of …\nInsert a <code>GizmoConfig</code> into a specific <code>GizmoConfigGroup</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this gizmo should draw line joints. This is only …\nA module adding debug visualization of <code>PointLight</code>s, …\nPositions of the gizmo’s vertices\nThe gizmos prelude.\nA module for rendering each of the 2D and 3D …\nPropagate the contextual gizmo into the <code>Update</code> storage for …\nAdditional <code>Gizmos</code> Functions – Rounded cuboids and …\nStart a new gizmo clearing context.\nWhether this gizmo’s topology is a line-strip or …\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nA <code>Plugin</code> that provides visualization of <code>Aabb</code>s for …\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nThe color of the box.\nThe default color for bounding box gizmos.\nDraws all bounding boxes in the scene when set to <code>true</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA builder returned by <code>Gizmos::arc_2d</code>.\nA builder returned by <code>Gizmos::arc_2d</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of lines used to approximate the geometry …\nSet the number of lines for this arc.\nA builder returned by <code>Gizmos::arrow</code> and <code>Gizmos::arrow_2d</code>\nDraws the arrow, by drawing lines with the stored <code>Gizmos</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdds another tip to the arrow, appended in the start point.\nChange the length of the tips to be <code>length</code>. The default …\nA builder returned by <code>Gizmos::ellipse_2d</code>.\nA builder returned by <code>Gizmos::ellipse</code>.\nA builder returned by <code>Gizmos::sphere</code>.\nSet the number of line-segments for this ellipse.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of lines used to approximate the geometry …\nSet the number of line-segments used to approximate the …\nSet the number of line-segments used to approximate the …\nDraws a bevel, a straight line in this case, to connect …\nThe default gizmo config group.\nA dotted line\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nImplements the <code>GizmoConfigGroup</code> trait for a gizmo config …\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nAn enum configuring how line joints will be drawn.\nAn enum used to configure the style of gizmo lines, …\nExtends both lines at the joining point until they meet in …\nDoes not draw any line joints.\nDraws a round corner with the specified resolution between …\nA solid line without any decorators\nHow closer to the camera than real geometry the line …\nSet to <code>false</code> to stop drawing gizmos.\nDescribe how lines should join\nApply perspective to gizmo lines.\nDetermine the style of gizmo lines.\nLine width specified in pixels.\nDescribes which rendering layers gizmos will be rendered …\nStorage of gizmo primitives.\nA <code>SystemParam</code> for drawing gizmos.\nSwap buffer for a specific clearing context.\nCombine the other gizmo storage with this one.\nClear this gizmo storage of any requested gizmos.\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA builder returned by <code>Gizmos::grid</code> and <code>Gizmos::grid_2d</code>\nA builder returned by <code>Gizmos::grid_3d</code>\nDraws a grid, by drawing lines with the stored <code>Gizmos</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeclare that all outer edges of the grid should be drawn. …\nDeclare that all outer edges of the grid should be drawn. …\nDeclare that the outer edges of the grid along the x axis …\nDeclare that the outer edges of the grid along the x axis …\nDeclare that the outer edges of the grid along the y axis …\nDeclare that the outer edges of the grid along the y axis …\nDeclare that the outer edges of the grid along the z axis …\nSkews the grid by <code>tan(skew)</code> in the x, y and z directions. …\nSkews the grid by <code>tan(skew)</code> in the x and y directions. <code>skew</code>…\nSkews the grid by <code>tan(skew)</code> in the x direction. <code>skew</code> is in …\nSkews the grid by <code>tan(skew)</code> in the x direction. <code>skew</code> is in …\nSkews the grid by <code>tan(skew)</code> in the y direction. <code>skew</code> is in …\nSkews the grid by <code>tan(skew)</code> in the y direction. <code>skew</code> is in …\nSkews the grid by <code>tan(skew)</code> in the z direction. <code>skew</code> is in …\nTake the color provided by <code>LightGizmoConfigGroup</code> depending …\nConfigures how a color is attributed to a light gizmo.\nThe <code>GizmoConfigGroup</code> used to configure the visualization …\nA <code>Plugin</code> that provides visualization of <code>PointLight</code>s, …\nUser-specified color.\nTake the color of the represented light.\nAdd this <code>Component</code> to an entity to draw any of its lights …\nRandom color derived from the light’s <code>Entity</code>.\nDefault color strategy for all light gizmos.\nDefault color strategy for this light gizmo. if <code>None</code>, use …\n<code>Color</code> to use for drawing a <code>DirectionalLight</code> gizmo when …\nDraw a gizmo for all lights if true.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>Color</code> to use for drawing a <code>PointLight</code> gizmo when …\n<code>Color</code> to use for drawing a <code>SpotLight</code> gizmo when …\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nA extension trait adding <code>App::init_gizmo_group</code> and …\nDraws a bevel, a straight line in this case, to connect …\nTake the color provided by <code>LightGizmoConfigGroup</code> depending …\nThe default gizmo config group.\nA dotted line\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nImplements the <code>GizmoConfigGroup</code> trait for a gizmo config …\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nAn enum configuring how line joints will be drawn.\nAn enum used to configure the style of gizmo lines, …\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nA <code>SystemParam</code> for drawing gizmos.\nConfigures how a color is attributed to a light gizmo.\nThe <code>GizmoConfigGroup</code> used to configure the visualization …\nUser-specified color.\nTake the color of the represented light.\nExtends both lines at the joining point until they meet in …\nDoes not draw any line joints.\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nDraws a round corner with the specified resolution between …\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nAdd this <code>Component</code> to an entity to draw any of its lights …\nA solid line without any decorators\nRandom color derived from the light’s <code>Entity</code>.\nDraw an arc, which is a part of the circumference of a …\nDraw an arc, which is a part of the circumference of a …\nDraw an arrow in 3D, from <code>start</code> to <code>end</code>. Has four tips for …\nDraw an arrow in 2D (on the xy plane), from <code>start</code> to <code>end</code>.\nDraw a set of axes local to the given transform (<code>transform</code>…\nDraw a set of axes local to the given transform (<code>transform</code>…\nDraw a circle in 3D with the given <code>isometry</code> applied.\nDraw a circle in 2D with the given <code>isometry</code> applied.\nThe color of the box.\nDefault color strategy for all light gizmos.\nDefault color strategy for this light gizmo. if <code>None</code>, use …\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nDraw a cross in 3D with the given <code>isometry</code> applied.\nDraw a cross in 2D with the given <code>isometry</code> applied.\nDraw a wireframe cube in 3D.\nDraw a curve, at the given time points, sampling in 2D.\nDraw a curve, at the given time points, sampling in 3D.\nDraw a curve, at the given time points, sampling in 2D, …\nDraw a curve, at the given time points, sampling in 3D, …\nThe default color for bounding box gizmos.\nHow closer to the camera than real geometry the line …\n<code>Color</code> to use for drawing a <code>DirectionalLight</code> gizmo when …\nDraws all bounding boxes in the scene when set to <code>true</code>.\nDraw a gizmo for all lights if true.\nDraw an ellipse in 3D with the given <code>isometry</code> applied.\nDraw an ellipse in 2D with the given <code>isometry</code> applied.\nSet to <code>false</code> to stop drawing gizmos.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nDraw a 2D grid in 3D.\nDraw a grid in 2D.\nDraw a 3D grid of voxel-like cells.\nRegisters <code>GizmoConfigGroup</code> in the app enabling the use of …\nInserts <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> replacing old …\nInsert a <code>GizmoConfig</code> into a specific <code>GizmoConfigGroup</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all <code>GizmoConfig</code>s.\nReturns an iterator over all <code>GizmoConfig</code>s, by mutable …\nDraw a line in 3D from <code>start</code> to <code>end</code>.\nDraw a line in 2D from <code>start</code> to <code>end</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to <code>end</code>.\nDraw a line in 2D with a color gradient from <code>start</code> to <code>end</code>.\nDescribe how lines should join\nApply perspective to gizmo lines.\nDetermine the style of gizmo lines.\nLine width specified in pixels.\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\n<code>Color</code> to use for drawing a <code>PointLight</code> gizmo when …\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nDraw a line in 3D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 2D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to …\nDraw a line in 2D with a color gradient from <code>start</code> to …\nDraw a wireframe rectangle in 3D with the given <code>isometry</code> …\nDraw a wireframe rectangle in 2D with the given <code>isometry</code> …\nDescribes which rendering layers gizmos will be rendered …\nDraw a wireframe cuboid with rounded corners in 3D.\nDraw a wireframe rectangle with rounded corners in 3D.\nDraw a wireframe rectangle with rounded corners in 2D.\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nDraw a wireframe sphere in 3D made out of 3 circles around …\n<code>Color</code> to use for drawing a <code>SpotLight</code> gizmo when …\nA module for rendering each of the 2D <code>bevy_math::primitives</code>…\nA module for rendering each of the 3D <code>bevy_math::primitives</code>…\nBuilder for configuring the drawing options of <code>Annulus</code>.\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nBuilder for configuring the drawing options of <code>Line2d</code>.\nThe output of <code>primitive_2d</code>. This is a builder to set …\nBuilder for configuring the drawing options of <code>Segment2d</code>.\nSet the drawing mode of the line (arrow vs. plain line)\nSet the drawing mode of the line (arrow vs. plain line)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the number of line-segments for the inner circle of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of line-segments for the outer circle of …\nRenders a 2D primitive with its associated details.\nSet the number of line-segments for each circle of the …\nBuilder for configuring the drawing options of <code>Capsule3d</code>.\nBuilder for configuring the drawing options of <code>Cone</code>.\nBuilder for configuring the drawing options of …\nBuilder for configuring the drawing options of <code>Cylinder</code>.\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nBuilder for configuring the drawing options of <code>Plane3d</code>.\nBuilder for configuring the drawing options of <code>Torus</code>.\nSet the number of lines used to approximate the height of …\nSet the number of cells in the x and y axes direction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the number of lines used to approximate the height of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of lines in the major (ring) direction.\nSet the number of lines in the minor (tube) direction.\nRenders a 3D primitive with its associated details.\nSet the number of lines used to approximate the top an …\nSet the number of lines used to approximate the capsule …\nSet the number of lines used to approximate the cone …\nSet the number of lines used to approximate the curved …\nSet the distance between cells along the x and y axes.\nA builder returned by <code>Gizmos::rounded_cuboid</code>\nA builder returned by <code>Gizmos::rounded_rect</code> and …\nChange the resolution of the arcs at the corners of the …\nChange the resolution of the arcs at the edges of the …\nChange the radius of the corners to be <code>corner_radius</code>. The …\nChange the radius of the edges to be <code>edge_radius</code>. The …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>Animation{}</code>: glTF Animation as Bevy <code>AnimationClip</code>\nFailed to load asset from an asset path.\nDecoding the base64 mesh data failed.\nUnsupported buffer format.\nCircular children in Nodes\n<code>DefaultMaterial</code>: as above, if the glTF file contains a …\nFailed to generate tangents.\nRepresentation of a loaded glTF file.\nInvalid glTF file.\nLabels that can be used to load part of a glTF\nAn error that occurs when loading a glTF file.\nAdditional untyped data that can be present on most glTF …\nLoads glTF files with all of their data as their …\nSpecifies optional settings for processing gltfs at load …\nAdditional untyped data that can be present on most glTF …\nThe material name of a glTF primitive.\nA glTF mesh, which may consist of multiple <code>GltfPrimitives</code> …\nAdditional untyped data that can be present on most glTF …\nA glTF node with all of its child nodes, its <code>GltfMesh</code>, …\nAdds support for glTF file loading to the app.\nPart of a <code>GltfMesh</code> that consists of a <code>Mesh</code>, an optional …\nAdditional untyped data that can be present on most glTF …\nA glTF skin with all of its joint nodes, …\nError when loading a texture. Might be due to a disabled …\nInvalid image mime type.\n<code>Skin{}/InverseBindMatrices</code>: glTF mesh skin matrices as …\nFailed to load a file.\n<code>Material{}</code>: glTF Material as a Bevy <code>StandardMaterial</code>\n<code>Mesh{}</code>: glTF Mesh as a <code>GltfMesh</code>\nMissing sampler for an animation.\nBinary blob is missing.\nFailed to generate morph targets.\n<code>Mesh{}/Primitive{}/MorphTargets</code>: Morph target animation …\n<code>Node{}</code>: glTF Node as a <code>GltfNode</code>\n<code>Mesh{}/Primitive{}</code>: glTF Primitive as a Bevy <code>Mesh</code>\nFailed to read bytes from an asset path.\n<code>Scene{}</code>: glTF Scene as a Bevy <code>Scene</code>\n<code>Skin{}</code>: glTF mesh skin as <code>GltfSkin</code>\n<code>Texture{}</code>: glTF Texture as a Bevy <code>Image</code>\nUnsupported primitive mode.\nRegister a custom vertex attribute so that it is …\nAll animations loaded from the glTF file.\nSubasset label for this node within the gLTF parent asset.\nSubasset label for this skin within the gLTF parent asset.\nSubasset label for this mesh within the gLTF parent asset.\nSubasset label for this primitive within its parent …\nDirect children of the node.\nCustom vertex attributes that will be recognized when …\nDefault scene to be displayed.\nAdditional data.\nAdditional data.\nAdditional data.\nAdditional data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd this label to an asset path\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nIf true, the loader will include the root of the gltf root …\nIndex of the node inside the scene\nIndex of the skin inside the scene\nIndex of the mesh inside the scene\nIndex of the primitive inside the mesh\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInverse-bind matricy of this skin.\nIs this node used as an animation root\nAll the nodes that form this skin.\nProcesses the asset in an asynchronous closure.\nIf true, the loader will spawn cameras for gltf camera …\nIf true, the loader will spawn lights for gltf light nodes.\nIf empty, the gltf materials will be skipped.\nIf empty, the gltf mesh nodes will be skipped.\nMaterial to apply to the <code>mesh</code>.\nAdditional data of the <code>material</code>.\nAll materials loaded from the glTF file.\nMesh of the node.\nTopology to be rendered.\nAll meshes loaded from the glTF file.\nComputed name for a node - either a user defined node name …\nComputed name for a skin - either a user defined skin name …\nComputed name for a mesh - either a user defined mesh name …\nComputed name for a primitive - either a user defined …\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nNamed skins loaded from the glTF file.\nCreate a node extracting name and index from glTF def\nCreate a skin extracting name and index from glTF def\nCreate a mesh extracting name and index from glTF def\nCreate a primitive extracting name and index from glTF def\nAll nodes loaded from the glTF file.\nIndex of the parent <code>GltfMesh</code> of this primitive\nThe glTF prelude.\nPrimitives of the glTF mesh.\nAll scenes loaded from the glTF file.\nSkin of the node.\nAll skins loaded from the glTF file.\nThe gltf root of the gltf asset, see …\nList of compressed image formats handled by the loader.\nLocal transform.\nContent of the extra data.\nContent of the extra data.\nContent of the extra data.\nContent of the extra data.\nCreate a node with animation root mark\nIndex of this material\nUsed to set the <code>Face</code> of the material, useful if it is used …\nIndex of the mesh for this primitive\nIndex of the mesh for this primitive\nIndex of this primitive in its parent mesh\nIndex of this primitive in its parent mesh\nThe primitive mode.\n<code>Animation{}</code>: glTF Animation as Bevy <code>AnimationClip</code>\n<code>DefaultMaterial</code>: as above, if the glTF file contains a …\nRepresentation of a loaded glTF file.\nLabels that can be used to load part of a glTF\nAdditional untyped data that can be present on most glTF …\n<code>Skin{}/InverseBindMatrices</code>: glTF mesh skin matrices as …\n<code>Material{}</code>: glTF Material as a Bevy <code>StandardMaterial</code>\n<code>Mesh{}</code>: glTF Mesh as a <code>GltfMesh</code>\n<code>Mesh{}/Primitive{}/MorphTargets</code>: Morph target animation …\n<code>Node{}</code>: glTF Node as a <code>GltfNode</code>\n<code>Mesh{}/Primitive{}</code>: glTF Primitive as a Bevy <code>Mesh</code>\n<code>Scene{}</code>: glTF Scene as a Bevy <code>Scene</code>\n<code>Skin{}</code>: glTF mesh skin as <code>GltfSkin</code>\n<code>Texture{}</code>: glTF Texture as a Bevy <code>Image</code>\nAll animations loaded from the glTF file.\nDefault scene to be displayed.\nAll materials loaded from the glTF file.\nAll meshes loaded from the glTF file.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nNamed skins loaded from the glTF file.\nAll nodes loaded from the glTF file.\nAll scenes loaded from the glTF file.\nAll skins loaded from the glTF file.\nThe gltf root of the gltf asset, see …\nContent of the extra data.\nIndex of this material\nUsed to set the <code>Face</code> of the material, useful if it is used …\nIndex of the mesh for this primitive\nIndex of the mesh for this primitive\nIndex of this primitive in its parent mesh\nIndex of this primitive in its parent mesh\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nTrait for removing, adding and replacing children and …\nChild builder type.\nFired whenever an <code>Entity</code> is added as a child to a parent.\nTrait for building children entities and adding them to a …\nStruct for building children entities and adding them to a …\nFired whenever a child <code>Entity</code> is moved to a new parent.\nFired whenever a child <code>Entity</code> is removed from its parent.\nContains references to the child entities of this entity.\nCommand that clears all children from an entity and …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nAn <code>Event</code> that is fired whenever there is a change in the …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nCommand that inserts a child at a given index of a parent…\nHolds a reference to the parent entity of this entity. …\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nCommand that clear all children from an entity, replacing …\nWhen enabled, runs …\nSpawn output type. Both <code>spawn</code> and <code>spawn_empty</code> return an …\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nStruct for adding children to an entity directly through …\nAdds a single child.\nPushes children to the back of the builder’s children. …\nGets the parent <code>Entity</code> as a slice of length 1.\nSystem to print a warning for each <code>Entity</code> with a <code>T</code> …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nReturns a slice over the <code>Children</code> of the given <code>entity</code>.\nRemoves all children from this entity. The <code>Children</code> …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nWhether to run …\nAdds a command to be executed, like <code>Commands::queue</code>.\nTarget entity\nTarget entity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGets the <code>Entity</code> ID of the parent.\nInserts children at the given index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the leaves of the …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the <code>entity</code>s immediate …\nReturns a new <code>DescendantIter</code>.\nReturns a new <code>DescendantDepthFirstIter</code>.\nReturns a new <code>AncestorIter</code>.\nConstructs a new object\nRun criteria that only allows running when …\nReturns the parent <code>Entity</code> of the given <code>entity</code>, if any.\nParent entity to add the child to.\nReturns the parent entity.\nThe hierarchy prelude.\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nRemoves all current children from this entity, replacing …\nReturns the topmost ancestor of the given <code>entity</code>.\nSets the parent of this entity.\nSorts children stably in place using the provided …\nSorts children stably in place using the provided key …\nSorts children stably in place using the provided key …\nSorts children unstably in place using the provided …\nSorts children unstably in place using the provided key …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSwaps the child at <code>a_index</code> with the child at <code>b_index</code>.\nSimilar to <code>Self::despawn_descendants</code> but does not emit …\nSimilar to <code>Self::despawn_recursive</code> but does not emit …\nWhether or not this command should output a warning if the …\nWhether or not this command should output a warning if the …\nSpawns the passed bundle and adds it to this entity as a …\nTakes a closure which builds children for this entity …\nThe child that was added\nThe child that was removed\nThe child that was moved\nThe parent the child was added to\nThe parent the child was added to\nThe parent the child was removed from\nThe parent the child was removed from\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nTrait for removing, adding and replacing children and …\nChild builder type.\nTrait for building children entities and adding them to a …\nStruct for building children entities and adding them to a …\nContains references to the child entities of this entity.\nCommand that clears all children from an entity and …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nCommand that inserts a child at a given index of a parent…\nHolds a reference to the parent entity of this entity. …\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nCommand that clear all children from an entity, replacing …\nSpawn output type. Both <code>spawn</code> and <code>spawn_empty</code> return an …\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nStruct for adding children to an entity directly through …\nAdds a single child.\nPushes children to the back of the builder’s children. …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nReturns a slice over the <code>Children</code> of the given <code>entity</code>.\nRemoves all children from this entity. The <code>Children</code> …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nAdds a command to be executed, like <code>Commands::queue</code>.\nTarget entity\nTarget entity\nInserts children at the given index.\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the leaves of the …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the <code>entity</code>s immediate …\nReturns the parent <code>Entity</code> of the given <code>entity</code>, if any.\nParent entity to add the child to.\nReturns the parent entity.\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nRemoves all current children from this entity, replacing …\nReturns the topmost ancestor of the given <code>entity</code>.\nSets the parent of this entity.\nSpawns an entity with the given bundle and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSimilar to <code>Self::despawn_descendants</code> but does not emit …\nSimilar to <code>Self::despawn_recursive</code> but does not emit …\nWhether or not this command should output a warning if the …\nWhether or not this command should output a warning if the …\nSpawns the passed bundle and adds it to this entity as a …\nTakes a closure which builds children for this entity …\nFunction always passes\nClamp the value to the border of the texture Requires the …\nClamp the value to the edge of the texture.\nDefault image sampler, derived from the <code>ImagePlugin</code> setup.\nCustom sampler for this image which will override global …\nFunction passes if new value is equal to existing value. …\nThe extension of an image file, for example <code>&quot;png&quot;</code>.\nAn error that occurs when loading a texture from a file.\nThe direct format of the image\nFunction passes if new value is greater than existing value\nFunction passes if new value is greater than or equal to …\nLoads HDR textures as Texture assets\nHow edges should be handled in texture addressing.\nComparison function used for depth and stencil operations.\nTexel mixing mode when sampling between texels.\nLoader for images that can be read by the <code>image</code> crate.\nUsed in <code>Image</code>, this determines what image sampler to use …\nColor variation to use when the sampler addressing mode is …\nIndicates to an <code>ImageLoader</code> how an <code>Image</code> should be sampled.\nThe type of a raw image buffer.\nOnly cubemaps with six faces are supported.\nErrors that occur while converting an <code>Image</code> into a …\nFunction passes if new value less than existing value\nFunction passes if new value is less than or equal to …\nLinear Interpolation.\nThe mime type of an image, for example <code>&quot;image/png&quot;</code>.\nRepeat the texture, mirroring it every repeat.\nNearest neighbor sampling.\nFunction never passes\nFunction passes if new value is not equal to existing …\nRGBA color <code>[0, 0, 0, 1]</code>.\nRGBA color <code>[1, 1, 1, 1]</code>.\nRepeat the texture in a tiling fashion.\nGets the list of file extensions for all formats.\nFull list of supported formats.\nAn error that occurs when accessing specific pixels in a …\nAn error that occurs when loading a texture\nExtends the wgpu <code>TextureFormat</code> with information about the …\nRGBA color <code>[0, 0, 0, 0]</code>.\nEncountered an unknown error during conversion.\nConversion into dynamic image not supported for source …\nUsed to calculate the volume of an item.\nOn the Metal wgpu backend, this is equivalent to …\nHow to deal with out of bounds accesses in the u (i.e. x) …\nHow to deal with out of bounds accesses in the v (i.e. y) …\nHow to deal with out of bounds accesses in the w (i.e. z) …\nGet a flags value with all known bits set.\nMust be at least 1. If this is not 1, all filter modes …\nReturns the aspect ratio (width / height) of a 2D image.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBorder color to use when <code>address_mode</code> is …\nIf this is enabled, this is a comparison sampler using the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nConvert a texture from a format to another. Only a few …\ndefault is a 1x1x1 all ‘1.0’ texture\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nLoad a bytes buffer in a <code>Image</code>, according to type …\nConverts a <code>DynamicImage</code> to an <code>Image</code>.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nRead the color of a specific pixel (2D texture).\nRead the color of a specific pixel (1D texture).\nRead the color of a specific pixel (3D texture).\nInitialize the descriptor if it is not already initialized.\nReturns the height of a 2D image.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether the texture format is compressed or uncompressed\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns an image sampler with <code>ImageFilterMode::Linear</code> min …\nReturns a sampler descriptor with <code>Linear</code> min and mag …\nProcesses the asset in an asynchronous closure.\nProcesses the asset in an asynchronous closure.\nMaximum level of detail (i.e. mip level) to use.\nMinimum level of detail (i.e. mip level) to use.\nHow to filter the texture when it needs to be magnified …\nHow to filter the texture when it needs to be minified …\nHow to filter between mip map levels\nReturns an image sampler with <code>ImageFilterMode::Nearest</code> min …\nReturns a sampler descriptor with <code>Nearest</code> min and mag …\nCreates a new image from raw binary data and the …\nCreates a new image loader that supports the provided …\nCreates a new image from raw binary data and the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet a reference to the data bytes where a specific pixel’…\nGet a mutable reference to the data bytes where a specific …\nCompute the byte offset where the data of a specific pixel …\nReturns the size of a pixel in bytes of the format.\nChanges the <code>size</code>, asserting that the total number of data …\nTakes a 2D image containing vertically stacked images of …\nThe intersection of a source flags value with the …\nResizes the image to the new size, by removing information …\nThe <code>ImageSampler</code> to use during rendering.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the color of a specific pixel (2D texture).\nChange the color of a specific pixel (1D texture).\nChange the color of a specific pixel (3D texture).\nReturns the size of a 2D image.\nReturns the size of a 2D image as f32.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the file extensions for a given format.\nGets the MIME types for a given format.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nA transparent white 1x1x1 image.\nConvert a <code>Image</code> to a <code>DynamicImage</code>. Useful for editing image\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the width of a 2D image.\nOnly cubemaps with six faces are supported.\nAn error that occurs when loading a texture\nThe <code>ImageSampler</code> to use during rendering.\nStores the position data of the input devices of type <code>T</code>.\nA “press-able” input of type <code>T</code>.\nThe current “press” state of an element\nAdds keyboard and mouse input to an App\nLabel for systems that update the input data.\nThe largest possible axis value.\nThe smallest possible axis value.\nThe button is pressed.\nThe button is not pressed.\nReturns an iterator over all axes.\nReturns an iterator over all axes and their values.\nReturns <code>true</code> if all items in <code>inputs</code> have been just pressed.\nReturns <code>true</code> if all items in <code>inputs</code> have just been …\nReturns <code>true</code> if all items in <code>inputs</code> have been pressed.\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed during …\nReturns <code>true</code> if any item in <code>inputs</code> has just been released.\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed.\nClears the <code>just pressed</code> and <code>just released</code> data for every …\nClears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…\nClears the <code>just_released</code> state of the <code>input</code> and returns …\nCommon run conditions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nThe gamepad input functionality.\nGestures functionality, from touchscreens and touchpads.\nReturns the position data of the provided <code>input_device</code>.\nAn iterator visiting every just pressed input in arbitrary …\nAn iterator visiting every just released input in …\nAn iterator visiting every pressed input in arbitrary …\nReturns the unclamped position data of the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this button pressed?\nReturns <code>true</code> if the <code>input</code> has been pressed during the …\nReturns <code>true</code> if the <code>input</code> has been released during the …\nThe keyboard input functionality.\nThe mouse input functionality.\nThe input prelude.\nRegisters a press for the given <code>input</code>.\nReturns <code>true</code> if the <code>input</code> has been pressed.\nRegisters a release for the given <code>input</code>.\nRegisters a release for all currently pressed inputs.\nRemoves the position data of the <code>input_device</code>, returning …\nClears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …\nClears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …\nSets the position data of the <code>input_device</code> to <code>position_data</code>…\nThe touch input functionality.\nRun condition that is active if <code>ButtonInput::just_pressed</code> …\nRun condition that is active if <code>ButtonInput::just_released</code> …\nRun condition that is active if <code>ButtonInput::pressed</code> is …\nStateful run condition that can be toggled via a input …\nAdd a rumble to the given gamepad.\nAn axis of the gamepad has been triggered.\nAn axis of the gamepad has been triggered.\nA <code>GamepadAxis</code>\nSettings for a <code>GamepadAxis</code>.\nErrors that occur when setting axis settings for gamepad …\nA button of the gamepad has been triggered.\nA button of the gamepad has been triggered.\nA <code>GamepadButton</code>\nSettings for a <code>GamepadButton</code>.\nManages settings for gamepad buttons.\nErrors that occur when setting button settings for gamepad …\nThe C button.\nThe gamepad is connected.\nA gamepad has been connected or disconnected.\nA gamepad has been connected or disconnected.\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nParameter <code>deadzone_upperbound</code> was not less than or equal …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nThe gamepad is disconnected.\nThe right action button of the action pad (i.e. PS: …\nStores a connected gamepad’s metadata such as the name …\nRepresents gamepad input types that are mapped in the …\n<code>GamepadAxis</code> event triggered by an analog state change\nRepresents gamepad input types that are mapped in the …\n<code>GamepadButton</code> event triggered by an analog state change\n<code>GamepadButton</code> event triggered by a digital state change\nThe connection status of a gamepad.\nA Gamepad connection event. Created when a connection to a …\nA gamepad event.\nEncapsulation over <code>GamepadAxis</code> and <code>GamepadButton</code>\nThe intensity at which a gamepad’s force-feedback motors …\nAn event that controls force-feedback rumbling of a <code>Gamepad</code>…\nGamepad settings component.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nParameter <code>livezone_lowerbound</code> was not less than or equal …\nThe given parameter <code>livezone_lowerbound</code> was not in range …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nRumble both gamepad motors at maximum intensity.\nThe mode button.\nThe upper action button of the action pad (i.e. PS: …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nThe given parameter was not in range 0.0..=1.0.\n<code>GamepadAxis</code> changed event unfiltered by <code>GamepadSettings</code>\n<code>GamepadButton</code> changed event unfiltered by <code>GamepadSettings</code>\nA raw gamepad event.\nParameter <code>release_threshold</code> was not less than or equal to …\nThe given parameter was not in range 0.0..=1.0.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nRumble the strong motor at maximum intensity.\nThe select button.\nThe bottom action button of the action pad (i.e. PS: …\nThe start button.\nStop all running rumbles on the given <code>Entity</code>.\nThe given parameter was not in range 0.0..=2.0.\nRumble the weak motor at maximum intensity.\nThe left action button of the action pad (i.e. PS: Square, …\nThe Z button.\nThe type of the triggered axis.\nThe gamepad axis assigned to the event.\nThe user defined axis settings.\nThe type of the triggered button.\nThe gamepad button assigned to the event.\nThe gamepad button assigned to the event.\nThe user defined button axis settings.\nThe user defined button settings.\nClamps the <code>raw_value</code> according to the <code>AxisSettings</code>.\nIs the gamepad connected?\nThe change in the gamepads connection.\nGet the value above which inputs will be rounded up to 0.0.\nGet the value below which positive inputs will be rounded …\nThe default axis settings.\nThe default button axis settings.\nThe default button settings.\nIs the gamepad disconnected?\nThe entity that represents this gamepad.\nThe entity that represents this gamepad.\nThe entity that represents this gamepad.\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGet the <code>Entity</code> associated with this request.\nThe gamepad on which the button is triggered.\nThe gamepad on which the axis is triggered.\nThe gamepad whose connection status changed.\nHandles <code>GamepadConnectionEvent</code>s events.\nConsumes <code>RawGamepadEvent</code> events, filters them using their …\nThe high value at which to apply rounding.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the button is pressed.\nReturns <code>true</code> if the button is released.\nGet the value below which negative inputs will be rounded …\nGet the value above which inputs will be rounded up to 1.0.\nThe low value at which to apply rounding.\nCreates a <code>RawGamepadButtonChangedEvent</code>.\nCreates a <code>RawGamepadAxisChangedEvent</code>.\nCreates a <code>GamepadConnectionEvent</code>.\nCreates a new <code>GamepadButtonStateChangedEvent</code>\nCreates a new <code>GamepadButtonChangedEvent</code>\nCreates a new <code>GamepadAxisChangedEvent</code>\nCreates a new <code>ButtonSettings</code> instance.\nCreates a new <code>AxisSettings</code> instance.\nGet the button input threshold above which the button is …\nGet the button input threshold below which the button is …\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe pressed state of the button.\nThe pressed state of the button.\nCreates a new rumble intensity with strong motor intensity …\nThe rumble intensity of the strong gamepad motor.\nGet the minimum value by which input must change before …\nThe threshold to apply rounding.\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe value of the button.\nThe value of the axis.\nThe analog value of the button.\nThe value of this axis.\nCreates a new rumble intensity with weak motor intensity …\nThe rumble intensity of the weak gamepad motor.\nThe value of the <code>deadzone_lowerbound</code> parameter.\nThe value of the <code>deadzone_upperbound</code> parameter.\nThe value of the <code>livezone_lowerbound</code> parameter.\nThe value of the <code>livezone_upperbound</code> parameter.\nThe value of the <code>press_threshold</code> parameter.\nThe value of the <code>release_threshold</code> parameter.\nThe name of the gamepad.\nThe USB product ID as assigned by the vendor, if available.\nThe USB vendor ID as assigned by the USB-IF, if available.\nHow long the gamepad should rumble.\nThe gamepad to rumble.\nThe gamepad to stop rumble.\nHow intense the rumble should be.\nDouble tap gesture.\nPan gesture.\nTwo-finger pinch gesture, often used for magnifications.\nTwo-finger rotation gesture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nAbort\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe Alphanumeric key (on linux/web)\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nAudioVolumeDown\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nAudioVolumeMute\nToggle between muted state and prior volume level. (…\nAudioVolumeUp\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nBrowserFavorites\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nBrowserRefresh\nRefresh the current page or content. (…\nBrowserSearch\nCall up the user’s preferred search page. (…\nBrowserStop\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe Cancel key. (on linux and web)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Recorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nThe Execute key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nHanjaMode\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nLegacy modifier key.\nLegacy modifier key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJunjaMode\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nThe logical key code of a <code>KeyboardInput</code>.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …")
searchState.loadedDescShard("bevy", 6, "Dragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nFires while a pointer is moving over the <code>target</code> entity.\nFires when a the pointer crosses out of the bounds of the …\nFires when a the pointer crosses into the bounds of the …\nA helper system param for accessing the picking event …\nStores the common data needed for all pointer events.\nAn entry in the cache that drives the <code>pointer_events</code> …\nState for all pointers.\nFires when a pointer button is released over the <code>target</code> …\nPointer button pressed to trigger this event.\nPointer button lifted to trigger this event.\nPointer button pressed and lifted to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed, moved, and lifted to trigger this …\nPointer button pressed to enter drag.\nPointer button pressed while dragging over.\nPointer button pressed while leaving drag.\nPointer button lifted to drop.\nThe change in position since the last move event.\nThe change in position since the last drag event.\nThe total distance vector of a drag, measured from drag …\nThe vector of drag movement measured from start to final …\nThe entity that was being dragged when the pointer entered …\nThe entity that was being dragged when the pointer was …\nThe entity that was being dragged when the pointer left …\nStores the starting and current locations for each entity …\nStores  the hit data for each entity currently being …\nThe entity that was dropped onto the <code>target</code> entity.\nDuration between the pointer pressed and lifted for this …\nAdditional event-specific data. <code>DragDrop</code> for example, has …\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nThe latest position of the pointer during this drag, used …\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nStores the press location and start time for each button …\nThe position of the pointer at drag start.\nThe original target of this picking event, before bubbling\nThe source of truth for all hover state. This is used to …\nThe entity is being hovered by a pointer.\nNo pointers are interacting with this entity.\nA component that aggregates picking interaction state of …\nThe entity is being pressed down by a pointer.\nThe previous state of the hover map, used to track changes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCoalesces all data from inputs and backends to generate a …\nUses pointer events to update <code>PointerInteraction</code> and …\nAdds mouse and touch inputs for picking pointers to your …\nDeactivates unused touch pointers.\nShould mouse inputs be updated?\nShould touch inputs be updated?\nSends mouse pointer events to be processed by the core …\nThe picking input prelude.\nSpawns the default mouse pointer.\nSends touch pointer events to be consumed by the core …\nAdds mouse and touch inputs for picking pointers to your …\nShould mouse inputs be updated?\nShould touch inputs be updated?\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAn optional component that marks cameras and target …\nRay casting for meshes.\nDetermines how mesh picking should consider <code>Visibility</code>. …\nWhen set to <code>true</code> ray casting will only happen between …\nCasts rays into the scene using <code>MeshPickingSettings</code> and …\nCompletely ignore visibility checks. Hidden items can …\nDetermines whether backfaces should be culled or included …\nCull backfaces.\nInclude backfaces.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nDisables backface culling for ray casts on this entity.\nSettings for a ray cast.\nHow a ray cast should handle <code>Visibility</code>.\nHit data for an intersection between a ray and a mesh.\nA simplified mesh component that can be used for ray …\nOnly cast rays against entities that are visible in the …\nOnly cast rays against entities that are visible in the …\nThe barycentric coordinates of the intersection.\nThe distance from the ray origin to the intersection point.\nA function that is run every time a hit is found. Ray …\nA predicate that is applied for every entity that ray …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe normal vector of the triangle at the point of …\nThe point of intersection in world space.\nChecks if the ray intersects with the AABB of a mesh, …\nChecks if a ray intersects a mesh, and returns the nearest …\nThe vertices of the triangle that was hit.\nThe index of the triangle that was hit.\nDetermines how ray casting should consider <code>Visibility</code>.\nThe pointer has been canceled. The OS can cause this to …\nA custom, uniquely identified pointer. Useful for mocking …\nThe pointer button was just pressed\nThe location of a pointer, including the current …\nThe tertiary pointer button\nThe mouse pointer.\nThe pointer has moved.\nTypes of actions that can be taken by pointers.\nThe button that was just pressed or released\nIdentifies a unique pointer entity. <code>Mouse</code> and <code>Touch</code> …\nAn input event effecting a pointer.\nHolds a list of entities this pointer is currently …\nComponent that tracks a pointer’s current <code>Location</code>.\nA resource that maps each <code>PointerId</code> to their <code>Entity</code> for …\nTracks the state of the pointer’s buttons in response to …\nThe stage of the pointer button press event\nA button has been pressed on the pointer.\nThe primary pointer button\nThe secondary pointer button\nA touch input, usually numbered by window touch events …\nThe pointer button was just released\nThe action that the event describes.\nReturns true if the <code>target_button</code> of this pointer was just …\nReturns true if the <code>target_button</code> of this pointer was just …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nGet the <code>Entity</code> of the supplied <code>PointerId</code>.\nReturns the nearest hit entity and data about that …\nReturns the touch id if the pointer is a touch input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if any pointer button is pressed.\nReturns true if the pointer is a custom input.\nReturns <code>true</code> if this pointer’s <code>Location</code> is within the …\nReturns true if the middle (tertiary) pointer button is …\nReturns true if the pointer is the mouse.\nReturns true if the primary pointer button is pressed.\nReturns true if the secondary pointer button is pressed.\nReturns true if the pointer is a touch input.\nReturns <code>Some(&amp;</code><code>Location</code><code>)</code> if the pointer is active, or <code>None</code> …\nThe <code>Location</code> of the pointer. Note that a location is both …\nThe location of the pointer. For [<code>PointerAction::Moved</code>], …\nReturns a <code>PointerLocation</code> associated with the given …\nCreates a new pointer input event.\nThe id of the pointer.\nThe position of the pointer in the <code>target</code>.\nUpdates pointer entities according to the input events.\nThe <code>NormalizedRenderTarget</code> associated with the pointer, …\nUpdate the <code>PointerMap</code> resource with the current frame’s …\nThe button that was pressed.\nHow much the pointer moved from the previous position.\nThe press direction, either down or up.\nCompletely ignore visibility checks. Hidden items can …\nFires when a pointer is canceled, and it’s current …\nFires when a pointer sends a pointer down event followed …\nOne plugin that contains the <code>PointerInputPlugin</code>, …\nFires when a pointer button is pressed over the <code>target</code> …\nFires while the <code>target</code> entity is being dragged.\nFires when a pointer drops the <code>dropped</code> entity onto the …\nFires when a pointer is dragging the <code>target</code> entity and a …\nFires when a pointer dragging the <code>dragged</code> entity enters …\nDragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nGenerates <code>Pointer</code> events and handles event bubbling.\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nThe tertiary pointer button\nFires while a pointer is moving over the <code>target</code> entity.\nFires when a the pointer crosses out of the bounds of the …\nFires when a the pointer crosses into the bounds of the …\nAn optional component that overrides default picking …\nA helper system param for accessing the picking event …\nThis plugin sets up the core picking infrastructure. It …\nStores the common data needed for all pointer events.\nThe button that was just pressed or released\nAn entry in the cache that drives the <code>pointer_events</code> …\nAdds mouse and touch inputs for picking pointers to your …\nState for all pointers.\nThe primary pointer button\nDisables backface culling for ray casts on this entity.\nAn optional component that marks cameras and target …\nSettings for a ray cast.\nHow a ray cast should handle <code>Visibility</code>.\nThe secondary pointer button\nFires when a pointer button is released over the <code>target</code> …\nOnly cast rays against entities that are visible in the …\nOnly cast rays against entities that are visible in the …\nThis ray cast should exit as soon as the nearest hit is …\nPointer button pressed to trigger this event.\nPointer button lifted to trigger this event.\nPointer button pressed and lifted to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed, moved, and lifted to trigger this …\nPointer button pressed to enter drag.\nPointer button pressed while dragging over.\nPointer button pressed while leaving drag.\nPointer button lifted to drop.\nCasts the <code>ray</code> into the world and returns a sorted list of …\nClears all the data assoceated with all of the buttons on …\nThe change in position since the last move event.\nThe change in position since the last drag event.\nThe total distance vector of a drag, measured from drag …\nThe vector of drag movement measured from start to final …\nThe entity that was being dragged when the pointer entered …\nThe entity that was being dragged when the pointer was …\nThe entity that was being dragged when the pointer left …\nStores the starting and current locations for each entity …\nStores  the hit data for each entity currently being …\nThe entity that was dropped onto the <code>target</code> entity.\nDuration between the pointer pressed and lifted for this …\nA function that is run every time a hit is found. Ray …\nAdditional event-specific data. <code>DragDrop</code> for example, has …\nA predicate that is applied for every entity that ray …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nRetrieves the current state for a specific pointer and …\nProvides write access to the state of a pointer and …\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnables and disables all picking features.\nEnables and disables updating interaction states of …\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nEnables and disables input collection.\nShould mouse inputs be updated?\nShould touch inputs be updated?\nIterator over all buttons that a pointer can have.\nThe latest position of the pointer during this drag, used …\nThis ray cast should check all entities whose AABB …\nConstruct a new <code>Pointer&lt;E&gt;</code> event.\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nStores the press location and start time for each button …\nDetermines how mesh picking should consider <code>Visibility</code>. …\nWhen set to <code>true</code> ray casting will only happen between …\nShould this entity block entities below it from being …\nThe position of the pointer at drag start.\nThe original target of this picking event, before bubbling\nDetermines how ray casting should consider <code>Visibility</code>.\nSet the early exit test to apply to the ray cast.\nSet the filter to apply to the ray cast.\nSet the <code>RayCastVisibility</code> setting to apply to the ray cast.\nWhen true, this event will always attempt to propagate …\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nAbort\nIndependent of all other nodes, but relative to its parent …\nAn <em>additive blend node</em>, which combines the animations of …\nCorresponds to <code>AnimationNodeType::Add</code>.\nCombines the color of the fragments with the colors behind …\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nA filter on a component that only retains results the …\nEmitted whenever an <code>Asset</code> is added.\nRuns after the fixed update logic.\nFound on Sun’s USB keyboard.\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nContains the set of permitted types by their <code>TypeId</code>.\nMethods for manipulating alpha values.\nSets how a material’s base color alpha channel is used …\nSpreads the fragment out over a hardware-dependent number …\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn ambient light, which lights the entire scene equally.\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nAn animatable value type.\nThis type allows the conversion of a curve valued in the …\nAn <code>AnimatableCurveEvaluator</code> for <code>AnimatableProperty</code> …\nA curve defined by keyframes with values in an animatable …\nA value on a component that Bevy can animate.\nA <code>Component</code> field that can be animated, defined by a …\n<code>Animation{}</code>: glTF Animation as Bevy <code>AnimationClip</code>\nA list of <code>VariableCurve</code>s and the <code>AnimationTargetId</code>s to …\nThis trait collects the additional requirements on top of …\nA low-level trait that provides control over how curves …\nA low-level trait for use in <code>crate::VariableCurve</code> that …\nA type alias for the <code>petgraph</code> data structure that defines …\nA graph structure that describes how animation clips are …\nAn <code>AssetLoader</code> that can load <code>AnimationGraph</code>s as assets.\nA <code>Handle</code> to the <code>AnimationGraph</code> to be used by the …\nVarious errors that can occur when serializing or …\nAn individual node within an animation graph.\nThe type of an animation mask bitfield.\nThe index of either an animation or blend node in the …\nAnimation node data specific to the type of node (clip, …\nAnimation controls.\nAdds animation support to an app\nAn animation that is being faded out as part of a …\nManages fade-out of animation blend factors, allowing for …\nA primitive shape formed by the region between two …\nCompletely ignore visibility checks. Hidden items can …\nLines will be broken without discrimination on any …\nThe <code>AnyOf</code> query parameter fetches entities with any of the …\n<code>App</code> is the primary API for writing user applications. It …\nAn event that indicates the <code>App</code> should exit. If one or …\nState installation methods for <code>App</code> and <code>SubApp</code>.\nA extension trait adding <code>App::init_gizmo_group</code> and …\nA <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …\nA primitive representing an arc between two points on a …\n↓\n←\n→\n↑\nDeclares that this type is an asset, which can be loaded …\nAdds asset-related builder methods to <code>App</code>.\nEvents that occur for a specific loaded <code>Asset</code>, such as “…\nA unique runtime-only identifier for an <code>Asset</code>. This is …\nThe fallback that records an asset ID.\nControls whether or not assets are pre-processed before …\nRecords an asset path.\nProvides “asset” loading and processing functionality. …\nLoads and tracks the state of <code>Asset</code> values from a …\nStores <code>Asset</code> values identified by their <code>AssetId</code>.\nThe window’s top-left corner should be placed at the …\nA more general form of the <code>FogFalloff::Exponential</code> mode. …\nBundle for playing a standard bevy audio asset\nA component for playing a sound.\nUsed to control audio during playback.\nCommon interactions with an audio sink.\nA source of audio data\nBundle for playing a sound.\nAudioVolumeDown\nAudioVolumeMute\nAudioVolumeUp\nThe sprite will take on the size of the image by default, …\nAutomatically determine the value based on the context and …\nUse the parent node’s <code>AlignItems</code> value to determine how …\nUse the parent node’s <code>JustifyItems</code> value to determine …\nTrack minimum size should be automatically sized\nTrack maximum size should be automatically sized\nRepeat the track to fill available space\nRepeat the track to fill available space but collapse any …\nPosition will be set by the window manager. Bevy will …\nStores the position data of the input devices of type <code>T</code>.\nA pure black color.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nThe back mouse button.\n<code>f(t) = 2.70158 * t³ - 1.70158 * t²</code>\nBehaves as <code>EaseFunction::BackIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 +  2.70158 * (t - 1.0)³ - 1.70158 * (t - 1.0)²</code>\nThe background color of the node\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nThe items are packed such that their baselines align.\nThe items are packed such that their baselines align.\nThis item will be aligned at the baseline.\nThis item will be aligned at the baseline.\nRuns before the fixed update logic.\nDraws a bevel, a straight line in this case, to connect …\nA <em>blend node</em>, which blends its children according to their …\nCorresponds to <code>AnimationNodeType::Blend</code>.\nThe base color alpha value defines the opacity of the …\nAn individual input for <code>Animatable::blend</code>.\nUse CSS Block layout model to determine the position of …\nClip any content that overflows outside the border box\nThe border color of the UI node.\nUsed to add rounded corners to a UI node. You can set a UI …\nStruct defining a <code>Sprite</code> border with padding values\nbouncy at the start!\nBehaves as <code>EaseFunction::BounceIn</code> for t &lt; 0.5 and as …\nbouncy at the end!\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\n[ on a US keyboard.\n] on a US keyboard.\nSome laptops place this key to the left of the ↑ key.\nBrowserFavorites\nSome laptops place this key to the right of the ↑ key.\nThe “home” button on Android.\nBrowserRefresh\nBrowserSearch\nBrowserStop\nTrait for removing, adding and replacing children and …\nCollection of methods similar to <code>BuildChildren</code>, but …\nChild builder type.\nThe <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…\nMarker struct for buttons\nA UI node that is a button\nA “press-able” input of type <code>T</code>.\nTake the color provided by <code>LightGizmoConfigGroup</code> depending …\nThe C button.\nThe calculated clip of the node\nThe defining <code>Component</code> for camera entities, storing …\nA 2D camera component. Enables the 2D render graph for a …\nA 3D camera component. Enables the main 3D render graph …\nThe camera coordinate space is right-handed x-right, y-up, …\nFires when a pointer is canceled, and it’s current …\nCapsLock or ⇪\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive centered on the origin A …\nLeftmost &amp; rightmost characters are equidistant to the …\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis\nThis item will be aligned along the center of the axis.\nThis item will be aligned along the center of the axis.\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis.\nWindow will be centered on the selected monitor.\nThe curve that results from chaining one curve with …\nAn error indicating that an end-to-end composition couldn…\nA filter on a component that only retains results the …\nInvalid character.\nTrait for building children entities and adding them to a …\nStruct for building children entities and adding them to a …\nContains references to the child entities of this entity.\nA circle primitive, representing the set of points some …\n<code>f(t) = 1.0 - sqrt(1.0 - t²)</code>\nBehaves as <code>EaseFunction::CircularIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sqrt((2.0 - t) * t)</code>\nA primitive representing a circular sector: a pie slice of …\nA primitive representing a circular segment: the area …\nCommand that clears all children from an entity and …\nA <code>Resource</code> that stores the color that is used to clear the …\nFor a camera, specifies the color used to clear the …\nFires when a pointer sends a pointer down event followed …\nA <em>clip node</em>, which plays an animation clip.\nCorresponds to <code>AnimationNodeType::Clip</code>.\nHide overflowing items by clipping.\nA clockwise winding order\nAn enumerated type that can represent any of the color …\nA 2d material that renders 2d meshes with a texture tinted …\nA component bundle for entities with a <code>Mesh2d</code> and a …\nTrait with methods for converting colors to non-color types\nTrait with methods for converting colors to packed …\nFlex from top to bottom.\nItems are placed by filling each column in turn, adding …\nCombines <code>Column</code> with the dense packing algorithm.\nFlex from bottom to top.\n, on a US keyboard.\nA <code>World</code> mutation.\nA <code>Command</code> queue to perform structural changes to the <code>World</code>.\nExtension trait for <code>Commands</code> adding <code>bevy_state</code> helpers.\nNotifies when text should be inserted into the editor …\nA data type that can be used to store data for an entity.\nCorresponds to a specific field on a specific component …\nProvides the computed size and layout properties of the …\nA state whose value is automatically computed based on the …\nThe created polygon is not convex.\nA system that determines if one or more scheduled systems …\nA cone primitive centered on the midpoint between the tip …\nA conical frustum primitive. A conical frustum can be …\nA curve with a constant value over its domain.\nThe provided knots were all equal. Knots must contain at …\nClip any content that overflows outside the content box\nThe application context menu key, which is typically found …\nThe curve that results from chaining two curves.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nA convex polygon with <code>N</code> vertices.\nAn error that happens when creating a <code>ConvexPolygon</code>.\nFound on Sun’s USB keyboard.\nRepeat the track fixed number of times\nA counterclockwise winding order\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nA spline interpolated continuously across the nearest four …\nA collection of <code>CubicSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a cubic …\nA spline interpolated continuously between the nearest two …\n<code>f(t) = t³</code>\nBehaves as <code>EaseFunction::CubicIn</code> for t &lt; 0.5 and as …\nNon-uniform Rational B-Splines (NURBS) are a powerful …\nError during construction of <code>CubicNurbs</code>\n<code>f(t) = (t - 1.0)³ + 1.0</code>\nA segment of a cubic curve, used to hold precomputed …\nA cuboid primitive, which is like a cube, except that the …\nUses the current monitor of the window.\nAn event that is sent whenever the user’s cursor enters …\nAn event that is sent whenever the user’s cursor leaves …\nAn event reporting that the mouse cursor has moved inside …\nA trait for a type that can represent values of type <code>T</code> …\nA curve that has been reparametrized by another curve, …\nThe given clear color is used, overriding the <code>ClearColor</code> …\nFound on Sun’s USB keyboard.\nImplement this on cubic splines that can generate a cyclic …\nA cylinder primitive centered on the origin\nHow many other states this state depends on. Used to help …\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nA type implementing this trait can be converted to a …\nThe type of the iterator of the audio samples, which …\nThe type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe clear color is taken from the world’s <code>ClearColor</code> …\nThe default gizmo config group.\n<code>DefaultMaterial</code>: as above, if the glTF file contains a …\nOne plugin that contains the <code>PointerInputPlugin</code>, …\nThis plugin group will add all the default plugins for a …\nA <code>SystemParam</code> that stores a buffer which gets applied to …\n⌦. The forward delete key. Note that on Apple keyboards, …\nContains the set of prohibited types by their <code>TypeId</code>.\nImplements <code>Deref</code> for structs. This is especially useful …\nImplements <code>DerefMut</code> for structs. This is especially useful …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nThe provided knots had a descending knot pair. Subsequent …\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nTypes that can read change detection information. This …\nTypes that implement reliable change detection.\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nA normalized vector pointing in a direction in 2D space\nA normalized vector pointing in a direction in 3D space\nA normalized SIMD vector pointing in a direction in 3D …\nA Directional light.\nA component bundle for <code>DirectionalLight</code> entities.\nNotifies when the IME was disabled.\nDefines the layout model used by this node.\nConfigures the “classic” computer graphics distance fog…\nA dotted line\nFires when a pointer button is pressed over the <code>target</code> …\nFires while the <code>target</code> entity is being dragged.\nFires when a pointer drops the <code>dropped</code> entity onto the …\nFires when a pointer is dragging the <code>target</code> entity and a …\nFires when a pointer dragging the <code>dragged</code> entity enters …\nDragging state.\nFires when a pointer dragging the <code>dragged</code> entity leaves …\nFires while the <code>dragged</code> entity is being dragged over the …\nFires when the <code>target</code> entity receives a pointer down event …\nFile is being dropped into a window.\nA collection of serializable resources and dynamic …\nA <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …\nA component bundle for a <code>DynamicScene</code> root.\nAdding this component will spawn the scene as a child of …\nA type whose values can be eased between.\nCurve functions over the unit interval, commonly used for …\nA <code>Curve</code> that is defined by\nThe right action button of the action pad (i.e. PS: …\nEject or ⏏. This key is placed in the function section …\n…\n…\nBehaves as <code>EaseFunction::ElasticIn</code> for t &lt; 0.5 and as …\n…\nAn ellipse primitive, which is like a circle, but the …\nNotifies when the IME was enabled.\nPage Down, End, or ↘\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nThis item will be aligned with the end of the axis.\nThis item will be aligned with the end of the axis.\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nEnter or ↵. Labeled Return on Apple keyboards.\nSystem set that runs enter schedule(s) for state <code>S</code>.\nLightweight identifier of an entity.\nUses a given <code>crate::monitor::Monitor</code> entity.\nA <code>Command</code> which gets executed for a given <code>Entity</code>.\nA list of commands that will be run to modify an entity.\nAn implementor of this trait knows how to map an <code>Entity</code> …\nProvides mutable access to a single entity and all of its …\nA read-only reference to a particular <code>Entity</code> and all of …\nA mutable reference to a particular <code>Entity</code>, and the entire …\nA pair of cubemap textures that represent the surroundings …\n= on a US keyboard.\nThe <code>App</code> experienced an unhandleable error. Holds the exit …\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nAn error type indicating why construction might fail.\nEsc or ⎋\nEuler rotation sequences.\nThe <code>EvaluatorId</code> is used to look up the …\nSomething that “happens” and might be read / observed …\nMutably reads events of type <code>T</code> keeping track of which …\nReads events of type <code>T</code> in order and tracks which events …\nSends events of type <code>T</code>.\nAn event collection that represents the events that …\nSystem set that runs exit schedule(s) for state <code>S</code>.\nAn exponential fog falloff with a given <code>density</code>.\n<code>f(t) = 2.0^(10.0 * (t - 1.0))</code>\nBehaves as <code>EaseFunction::ExponentialIn</code> for t &lt; 0.5 and as …\n<code>f(t) = 1.0 - 2.0^(-10.0 * t)</code>\nA squared exponential fog falloff with a given <code>density</code>.\nSchedule which extract data from the main world and …\nA 3D shape representing an extruded 2D <code>base_shape</code>.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nFailed to add glyph to a newly created atlas for some …\nFailed to get scaled glyph image for cache key\nEvents related to files being dragged and dropped on a …\nProvides read-only access to a set of <code>Resource</code>s defined by …\nProvides mutable access to a set of <code>Resource</code>s defined by …\nFound on Sun’s USB keyboard.\nRuns first in the schedule.\nThe right endpoint of the first curve was infinite.\nTrack maximum size should be sized according to the …\nTrack maximum size should be sized according to the …\nThe fixed timestep game clock following virtual time.\nRuns first in the <code>FixedMain</code> schedule.\nThe schedule that runs last in <code>FixedMain</code>\nContains the fixed update logic. Runs <code>FixedMain</code> zero or …\nThe schedule that runs after the <code>FixedUpdate</code> schedule, for …\nThe schedule that contains logic that must run before …\nThe schedule that contains most gameplay logic, which runs …\nUse Flexbox layout model to determine the position of this …\nDefines how flexbox items are ordered within a flexbox\nThe items are packed towards the end of the axis, unless …\nThis item will be aligned with the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nThis item will be aligned with the start of the axis, …\nThe items are packed towards the start of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nDefines if flexbox items appear on a single line or on …\nA trait for extending <code>f32</code> and <code>f64</code> with extra methods.\nFn This is typically a hardware key that does not generate …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nAllows switching between different fog falloff modes, and …\nAn <code>Asset</code> that contains the data for a loaded font, if …\nThe curve that results from repeating a curve forever.\nThe forward mouse button.\nThe dimension as a fraction of the total available grid …\nAdds frame counting functionality to Apps.\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nErgonomics trait for a type with a <code>Standard</code> distribution, …\nCreates an instance of the type this trait is implemented …\nA curve defined by a function together with a fixed domain.\nStores a connected gamepad’s metadata such as the name …\nRepresents gamepad input types that are mapped in the …\nRepresents gamepad input types that are mapped in the …\nGamepad settings component.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nPlugin that provides gamepad handling to an <code>App</code>.\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nImplements the <code>GizmoConfigGroup</code> trait for a gizmo config …\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nAn enum configuring how line joints will be drawn.\nAn enum used to configure the style of gizmo lines, …\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nA <code>SystemParam</code> for drawing gizmos.\n<code>GlobalTransform</code> is an affine transformation from …\nUse this <code>Resource</code> to control the global volume of all …\n<code>GlobalZIndex</code> allows a <code>Node</code> entity anywhere in the UI …\nRepresentation of a loaded glTF file.\nLabels that can be used to load part of a glTF\nAdditional untyped data that can be present on most glTF …\nA curve that is the graph of another curve over its …\nTrait for returning a grayscale color of a provided …\nUse CSS Grid layout model to determine the position of …\nControls whether grid items are placed row-wise or …\nRepresents the position of a grid item in a single axis.\nErrors that occur when setting constraints for a …\nA <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …\nHow many times to repeat a repeated grid track\nA strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …\nReturns a bool that describes if an entity has the …\nHelp. Not present on standard PC keyboards.\nError returned if a hex string could not be parsed as a …\nHide overflowing items by influencing layout and then …\nAn entity with <code>Visibility::Hidden</code> will be unconditionally …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nUse for dedicated ひらがな key found on some Japanese …\nHome or ↖\nA torus that has no hole but also doesn’t intersect …\nThe node has been hovered over\nFile is currently being hovered over a window.\nFile hovering was canceled.\nColor in Hue-Saturation-Lightness (HSL) color space with …\nA color in the HSL color space with alpha.\nColor in Hue-Saturation-Value (HSV) color space with alpha.\nA color in the HSV color space with alpha.\nTrait for manipulating the hue of a color.\nColor in Hue-Whiteness-Blackness (HWB) color space with …\nA color in the HWB color space with alpha.\nLegacy modifier key.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA UI node that is an image\nA UI Node that renders an image.\nAdds the <code>Image</code> as an asset and makes sure that they are …\nA Input Method Editor event.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives an …\nThe input type of this system. See <code>System::In</code>.\nThe system’s input.\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nA <code>SystemInput</code> type which denotes that a <code>System</code> receives a …\nOnly cubemaps with six faces are supported.\nUses the monitor with the specified index.\nA small / efficient runtime identifier that can be used to …\nAn unbounded plane in 3D space. It forms a separating …\nAn entity with <code>Visibility::Inherited</code> will inherit the …\nWhether or not an entity is visible in the hierarchy. This …\nThe type contained within this smart pointer\nThe inner input type that is passed to functions that run …\nInsert or Ins. Not present on Apple keyboards.\nCommand that inserts a child at a given index of a parent…\nDescribes what type of input interaction has occurred for …\nGenerates <code>Pointer</code> events and handles event bubbling.\nA nonempty closed interval, possibly unbounded in either …\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nConversion trait to turn something into a <code>System</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\n<code>Skin{}/InverseBindMatrices</code>: glTF mesh skin matrices as …\nAn I/O error occurred.\nMarker used to identify default cameras, they will have …\nAn isometry in two dimensions, representing a rotation …\nAn isometry in three dimensions, representing a rotation …\nWords are spaced so that leftmost &amp; rightmost characters …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nDescribes the horizontal alignment of multiple lines of …\nJapanese: カタカナ/ひらがな/ローマ字 …\nUse for dedicated カタカナ key found on some Japanese …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nProvided the wrong number of knots.\nColor in LAB color space, with alpha\nA color in the LAB color space with alpha.\nMarker struct for labels\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nRuns last in the schedule.\nSometimes labeled My Computer on the keyboard\nSometimes labeled Calculator on the keyboard\nLaunchMail\nColor in LCH color space, with alpha\nA color in the LCH color space with alpha.\nLeftmost character is immediately to the right of the …\nThe left mouse button.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nInvalid length.\nConfigures how a color is attributed to a light gizmo.\nThe <code>GizmoConfigGroup</code> used to configure the visualization …\nA marker component for a light probe, which is a cuboid …\nAn infinite line going through the origin along a …\nAn infinite line going through the origin along a …\nDetermines how lines will be broken when preventing text …\nA linear fog falloff that grows in intensity between <code>start</code> …\n<code>f(t) = t</code>\nA curve that has had its domain changed by a linear …\nAn error indicating that a linear reparametrization couldn…\nLinear RGB color with alpha.\nA color in the linear sRGB color space with alpha.\nEmitted whenever an <code>Asset</code> has been fully loaded (including …\nA system local <code>SystemParam</code>.\nMethods for changing the luminance of a color. Note that …\nThe schedule that contains the app logic that is evaluated …\nUser-specified color.\nA curve whose samples are defined by mapping samples from …\nReduce transparency to fully opaque or fully transparent …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nTake the color of the represented light.\nMaterials are used alongside <code>MaterialPlugin</code>, <code>Mesh3d</code>, and …\n<code>Material{}</code>: glTF Material as a Bevy <code>StandardMaterial</code>\nA component bundle for entities with a <code>Mesh3d</code> and a …\nA UI node that is rendered using a <code>UiMaterial</code>\nAdds the necessary ECS resources and render logic to …\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nA trait for getting measurements of 2D shapes\nA trait for getting measurements of 3D shapes\nMediaPlayPause\nMediaSelect\nMediaStop\nMediaTrackNext\nMediaTrackPrevious\nA 3D object made out of vertices representing triangles, …\n<code>Mesh{}</code>: glTF Mesh as a <code>GltfMesh</code>\nA component for 2D meshes. Requires a <code>MeshMaterial2d</code> to be …\nA component for 3D meshes. Requires a <code>MeshMaterial3d</code> to be …\nA trait used to build <code>Mesh</code>es from a configuration\nA material used for rendering a <code>Mesh2d</code>.\nA material used for rendering a <code>Mesh3d</code>.\nAdds the mesh picking backend to your app.\nRuntime settings for the <code>MeshPickingPlugin</code>.\nAdd this ray casting <code>SystemParam</code> to your system to cast …\nA trait for shapes that can be turned into a <code>Mesh</code>.\nLegacy modifier key. Also called “Super” in certain …\nThe tertiary pointer button\nThe middle mouse button.\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nThis plugin group will add the minimal plugins for a <em>Bevy</em> …\n- on a US keyboard.\nExtends both lines at the joining point until they meet in …\nLinear interpolation of two colors within a given color …\nThe mode button.\nEmitted whenever an <code>Asset</code> value is modified.\nReferences a screen monitor.\n<code>Mesh{}/Primitive{}/MorphTargets</code>: Morph target animation …\nControls the morph targets for all child <code>Mesh3d</code> entities. …\nA button on a mouse device.\nFires while a pointer is moving over the <code>target</code> entity.\nComponent for configuring the number of samples for …\nCombines the color of the fragments with the colors behind …\nUnique mutable borrow of an entity’s component or of a …\nComponent used to identify an entity. Stores a hash for …\nConvenient query for giving a human friendly name to an …\nThe next state of <code>State&lt;S&gt;</code>.\nFont was not found, this could be that the font has not …\nNo soft wrapping, where text is automatically broken up …\nSingle line, will overflow if needed.\nThe base component for UI entities. It describes UI layout …\n<code>Node{}</code>: glTF Node as a <code>GltfNode</code>\nThe basic UI node.\nJapanese: 無変換 (muhenkan)\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nDoes not draw any line joints.\nNothing has happened\nUse no layout, don’t render this node and its children.\nNo clear color is used: the camera will simply draw on top …\nThe upper action button of the action pad (i.e. PS: …\nThe number of control points provided is less than 4.\nThis resampling operation was not provided with enough …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAn <code>Observer</code> system. Add this <code>Component</code> to an <code>Entity</code> to …\nA simple linear interpolation, using a single texture …\nUI will render without anti-aliasing\nColor in Oklab color space, with alpha\nA color in the Oklab color space with alpha.\nColor in Oklch color space, with alpha\nA color in the Oklch color space with alpha.\nUI will render with anti-aliasing\nTrigger emitted when a component is added to an entity. …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nTrigger emitted when a component is inserted onto an …\nTrigger emitted when a component is removed from an …\nTrigger emitted when a component is replaced on an entity. …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nRun once and stop.\nBase color alpha values are overridden to be fully opaque …\nFound on Sun’s USB keyboard.\nA filter that tests if any of the given filters apply.\nProject a 3D space onto a 2D surface using parallel lines, …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nAnother mouse button with the associated number.\nFires when a the pointer crosses out of the bounds of the …\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nThe <code>Outline</code> component adds an outline outside the edge of …\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>Self::mesh</code>. This will be a <code>MeshBuilder</code> used …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nThe type of vector returned by the sample methods, <code>Vec2</code> …\nFires when a the pointer crosses into the bounds of the …\nWhether to show or hide overflowing items\nWhether to show or hide overflowing items\nUsed to determine the bounds of the visible area when a UI …\nThe bounds of the visible area when a UI node is clipped.\nClip any content that overflows outside the padding box\nPage Down, PgDn, or ⇟\nPage Up, PgUp, or ⇞\nThe parallax mapping method to use to compute depth based …\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe wrapper input type that is defined as the first …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA collection of potentially conflicting <code>SystemParam</code>s …\nHolds a reference to the parent entity of this entity. …\nParsing error.\nThe foundational trait of <code>bevy_reflect</code>, used for accessing …\nFound on Sun’s USB keyboard.\nPause Break\nA component bundle for PBR entities with a <code>Mesh3d</code> and a …\nThere is a pending transition for state <code>S</code>\nSet the value as a percentage of its parent node’s …\nTrack minimum size should be a percentage value\nTrack maximum size should be a percentage value\n. on a US keyboard.\nA 3D camera projection in which distant objects appear …\nAn optional component that overrides default picking …\nA helper system param for accessing the picking event …\nThis plugin sets up the core picking infrastructure. It …\nThe curve that results from chaining a curve with its …\nAn error indicating that a ping ponging of a curve couldn…\nA source of sine wave sound\nBundle for playing a bevy note sound\nAn unbounded plane in 2D space. It forms a separating …\nA bounded plane in 3D space. It forms a surface starting …\nInitial settings to be used when audio starts playing.\nA collection of Bevy app logic and configuration.\nCombines multiple <code>Plugin</code>s into a single unit.\nA light that emits light in all directions from a central …\nA component bundle for <code>PointLight</code> entities.\nStores the common data needed for all pointer events.\nThe button that was just pressed or released\nAn entry in the cache that drives the <code>pointer_events</code> …\nAdds mouse and touch inputs for picking pointers to your …\nState for all pointers.\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nSystem parameter that works very much like <code>Query</code> except it …\nThe strategy used to position this node\nThe schedule that runs once after <code>Startup</code>.\nThe schedule that contains logic that must run after <code>Update</code>…\nThis key is placed in the function section on some Apple …\nThe schedule that runs before <code>Startup</code>.\nThe schedule that contains logic that must run before …\nNotifies when a new composing text should be set at the …\nSimilar to <code>AlphaMode::Blend</code>, however assumes RGB channel …\nThe node has been pressed.\nThe primary pointer button\nUses the primary monitor of the system.\n<code>Mesh{}/Primitive{}</code>: glTF Primitive as a Bevy <code>Mesh</code>\nA marker trait for 2D primitives\nA marker trait for 3D primitives\nPrtScr SysRq or Print Screen\nAssets will be “pre-processed”. This enables assets to …\nA configurable <code>CameraProjection</code> that can select its …\nThe animated property type.\nFound on Sun’s USB keyboard.\nSet this value in logical pixels.\nTrack minimum size should be a fixed pixel value\nTrack maximum size should be a fixed pixel value\n<code>f(t) = t²</code>\nBehaves as <code>EaseFunction::QuadraticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = -(t * (t - 2.0))</code>\n<code>f(t) = t⁴</code>\nBehaves as <code>EaseFunction::QuarticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)³ * (1.0 - t) + 1.0</code>\nA quaternion representing an orientation.\nSystem parameter that provides selective access to the …\nBuilder struct to create <code>QueryState</code> instances at runtime.\nProvides scoped access to a <code>World</code> state according to a …\n<code>f(t) = t⁵</code>\nBehaves as <code>EaseFunction::QuinticIn</code> for t &lt; 0.5 and as …\n<code>f(t) = (t - 1.0)⁵ + 1.0</code>\n’ on a US keyboard.\nA collection of <code>RationalSegment</code>s chained into a single …\nImplement this on cubic splines that can generate a …\nA segment of a rational cubic curve, used to hold …\nAn infinite half-line starting at <code>origin</code> and going in …\nAn infinite half-line starting at <code>origin</code> and going in …\nDisables backface culling for ray casts on this entity.\nAn optional component that marks cameras and target …\nSettings for a ray cast.\nHow a ray cast should handle <code>Visibility</code>.\n<code>System</code> types that do not modify the <code>World</code> when run. This …\nReal time clock representing elapsed wall clock time.\nA rectangle defined by two opposite corners.\nA rectangle primitive, which is like a square, except that …\nShared borrow of an entity’s component with access to …\nA core trait of <code>bevy_reflect</code>, used for downcasting to …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to operate on reflected <code>Component</code> trait of a …\nA struct used to provide the default value of a type.\nA struct used to deserialize reflected instances of a type.\nA struct used to operate on the reflected …\nType data that represents the <code>FromReflect</code> trait and allows …\nA struct used to operate on the reflected <code>FromWorld</code> trait …\nSomething that can be interpreted as a reflection path in …\nA struct used to operate on reflected <code>Resource</code> of a type.\nA struct used to serialize reflected instances of a type.\nA struct used to operate on the reflected <code>States</code> trait of …\nA bundle that contains everything needed to make an entity …\nA polygon centered on the origin where all vertices lie on …\nRelative to all other nodes with the <code>PositionType::Relative</code>…\nDiscovers the best depth value based on binary search.\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nEmitted whenever an <code>Asset</code> is removed.\nA <code>SystemParam</code> that yields entities that had their <code>T</code> …\nA curve whose sample space is mapped onto that of some …\nThe curve that results from repeating a curve <code>N</code> times.\nAn error indicating that a repetition of a curve couldn’…\nRepresents a <em>possibly</em> repeated <code>GridTrack</code>.\nReset when finished.\nCommand that clear all children from an entity, replacing …\nShared borrow of a <code>Resource</code>.\nUnique mutable borrow of a <code>Resource</code>.\nAn error indicating that a resampling operation could not …\nRepresents the resolved border radius values for a UI node.\nA type that can be inserted into a <code>World</code> as a singleton.\nResume\nThe curve that results from reversing another.\nAn error indicating that a reversion of a curve couldn’t …\nA rhombus primitive, also known as a diamond shape. A four …\nRightmost character is immediately to the left of the …\nThe right mouse button.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nA torus that has a ring. The major radius is greater than …\nAn error occurred in RON serialization or deserialization.\nA counterclockwise 2D rotation.\nDraws a round corner with the specified resolution between …\nSame way as text direction along the main axis.\nItems are placed by filling each row in turn, adding new …\nCombines <code>Row</code> with the dense packing algorithm.\nOpposite way as text direction along the main axis.\nUpdates the running gamepad rumble effects.\nRuns the <code>FixedMain</code> schedule in a loop according until all …\nSet enum for the systems that want to run inside …\nThe total <code>DEPENDENCY_DEPTH</code> of all the states that are part …\nA constant indicating the storage type used for this …\nA curve that is defined by neighbor interpolation over a …\nA curve that is defined by explicit neighbor interpolation …\nA composition of <code>World</code> objects.\n<code>Scene{}</code>: glTF Scene as a Bevy <code>Scene</code>\nA component bundle for a <code>Scene</code> root.\nA filter used to control which types can be added to a …\nAdding this component will spawn the scene as a child of …\nHandles spawning and despawning scenes in the world, …\nA collection of systems, and the metadata and executor …\nResource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s …\nPlugin for screen space ambient occlusion.\nScroll overflowing items.\nScroll Lock\nThe scroll position of the node.\nThe left endpoint of the second curve was infinite.\nThe secondary pointer button\nA segment of a line going through the origin along a …\nA segment of a line going through the origin along a …\nThe select button.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nA version of <code>Handle&lt;AnimationClip&gt;</code> suitable for …\nA version of <code>AnimationGraph</code> suitable for serializing as an …\nA version of <code>AnimationGraphNode</code> suitable for serializing …\nA version of <code>AnimationNodeType</code> suitable for serializing as …\nThe type of <code>SystemSet</code> this instance converts into.\nA shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …\nExposes methods to uniformly sample a variety of primitive …\nShift or ⇧\nShift or ⇧\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nAdd this <code>Component</code> to an entity to draw any of its lights …\n<code>f(t) = 1.0 - cos(t * π / 2.0)</code>\nBehaves as <code>EaseFunction::SineIn</code> for t &lt; 0.5 and as …\n<code>f(t) = sin(t * π / 2.0)</code>\nSystem parameter that provides access to single entity’s …\n<code>Skin{}</code>: glTF mesh skin as <code>GltfSkin</code>\n/ on a US keyboard.\nSleep\nDefines how a texture slice scales when resized\nThe texture will be cut in 9 slices, keeping the texture …\nA solid line without any decorators\nThe source curve that was to be reparametrized had …\nThe source curve that was to be reversed had unbounded …\nThe source curve that was to be ping ponged had unbounded …\nThe source curve that was to be repeated had unbounded …\nThe set of states from which the <code>Self</code> is derived.\nThe set of states from which the <code>Self</code> is derived.\nThe bottom action button of the action pad (i.e. PS: …\n  (space)\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nAn error occurred in RON deserialization, and the location …\nUsed to control spatial audio during playback.\nA <code>Bundle</code> that allows the correct positional rendering of …\nSettings for the listener for spatial audio sources.\nSpawn output type. Both <code>spawn</code> and <code>spawn_empty</code> return an …\nThe schedule that contains scene spawning.\nA sphere primitive, representing the set of all points …\nA self-intersecting torus. The major radius is less than …\nA light that emits light in a given direction from a …\nA component bundle for spot light entities\nDescribes a sprite to be rendered to a 2D camera\nA <code>Bundle</code> of components for drawing a single sprite from an …\nControls how the image is altered when scaled.\nNon-linear standard RGB with alpha.\nA color in the sRGB color space with alpha.\nA type with a natural interpolation that provides strong …\nA material with “standard” properties used in PBR …\nThe start button.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThis item will be aligned with the start of the axis.\nThis item will be aligned with the start of the axis.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThe schedule that runs once when the app starts.\nA finite-state machine whose transitions have associated …\nEntities marked with this component will be removed when …\nExtension trait for <code>App</code> adding methods for registering …\nA <code>States</code> type or tuple of types which implement <code>States</code>.\nRuns state transitions.\nEvent sent when any state transition of <code>S</code> happens. This …\nTypes that can define world-wide states in a finite-state …\n<code>n</code> steps connecting the start and the end\nThe slice will be stretched to fit the area\nThe items are stretched to fill the space they’re given.\nThe items are stretched to fill the space they’re given.\nThis item will be stretched to fill the container.\nThis item will be stretched to fill the space it’s given.\nThe items are stretched to fill the container along the …\nThe items are stretched to fill the container along the …\nA “strong” reference to a live (or loading) <code>Asset</code>. If …\nA trait used to power struct-like operations via reflection…\nA secondary application with its own <code>World</code>. These can run …\nA sub-state is a state that exists only when the source …\n<code>App</code> exited without any problems.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nSuspend\nAn ECS system that can be added to a <code>Schedule</code>\nThe type of <code>System</code> that this instance converts into.\nShorthand way to get the <code>System::In</code> for a <code>System</code> as a …\nTrait for types that can be used as input to <code>System</code>s.\nA builder that can create a <code>SystemParam</code>.\nA trait implemented for all functions that can be used as …\nTypes that identify logical groups of systems.\nDerive macro generating an impl of the trait <code>SystemSet</code>.\nTab or ⇥\nIndicates that this root <code>Node</code> entity should be rendered to …\nThe target interval for reparametrization was unbounded.\nHelper for configuring and creating the default task …\nSetup of default task pools: <code>AsyncComputeTaskPool</code>, …\nA tetrahedron primitive.\nThe top-level UI text component.\nThe top-level 2D text component.\n<code>Text2dBundle</code> was removed in favor of required components. …\n2d alias for <code>TextReader</code>.\n2d alias for <code>TextWriter</code>.\n<code>TextBundle</code> was removed in favor of required components. …\nThe color of the text for this section.\nErrors related to the textsystem\n<code>TextFont</code> determines the style of a text span within a …\nComponent with text format settings for a block of text.\nA span of UI text in a tree of spans under an entity with …\nUI alias for <code>TextReader</code>.\nUI alias for <code>TextWriter</code>.\n<code>Texture{}</code>: glTF Texture as a Bevy <code>Image</code>\nAn index into a <code>TextureAtlasLayout</code>, which corresponds to a …\nA builder which is used to create a texture atlas from …\nStores a map used to lookup the position of a texture in a …\nStores a mapping from sub texture handles to the related …\nAn error that occurs when loading a texture\nSingle texture slice, representing a texture rect to draw …\nSlices a texture using the <strong>9-slicing</strong> technique. This …\nAn acceleration structure for an animation graph that …\nAcceleration structures for animation graphs that allows …\nThe slice will be tiled to fit the area\nThe texture will be repeated if stretched beyond …\nA generic clock resource that tracks how much it has …\nTracks elapsed time. Enters the finished state once …\nSpecifies <code>Timer</code> behavior.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA touch input event.\nA collection of <code>Touch</code>es.\nDescribe the position of an entity. If the entity has a …\nA <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …\nSystem parameter for computing up-to-date <code>GlobalTransform</code>s.\nThe base plugin for handling <code>Transform</code> components\nA trait for point transformation methods.\nPropagates changes in transform to children’s …\nSet enum for the systems relating to transform propagation\nSystem set that runs transition schedule(s) for state <code>S</code>.\nThe component that describes which Entity to propagate …\nA triangle in 2D space\nA 3D triangle primitive.\nType containing triggered <code>Event</code> information for a given …\nA trait used to power tuple struct-like operations via …\nTurbo\nCorresponds to a custom property of a given type. This …\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nRegistration of default types to the <code>TypeRegistry</code> resource.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nMarker for controlling whether Ui is rendered with or …\nNumber of shadow samples. A larger value will result in …\nMaterials are used alongside <code>UiMaterialPlugin</code> and …\nAdds the necessary ECS resources and render logic to …\nA type which is commonly used to define margins, paddings …\nThe current scale of the UI.\nThis resampling operation failed because of an unbounded …\nNo state transition is pending\nFound on Sun’s USB keyboard.\nA curve that is defined by interpolation over unevenly …\nA curve that is defined by interpolation over unevenly …\nThis variant is used when the key cannot be translated to …\nLoads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…\nRepresents an unset filter.\nAn untyped variant of <code>Handle</code>, which internally stores the …\nEmitted when the last <code>super::Handle::Strong</code> of an <code>Asset</code> is …\nFires when a pointer button is released over the <code>target</code> …\nThe schedule that contains any app logic that must run …\nA stable-across-runs / const asset identifier. This will …\nSet this value in percent of the viewport’s larger …\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nSet this value in percent of the viewport’s smaller …\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nRepresents the possible value types for layout properties.\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nContains an animation curve which is used to animate a …\nRandom color derived from the light’s <code>Entity</code>.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nSet this value in percent of the viewport height\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nAlgorithmically-computed indication of whether an entity …\nThe virtual game clock representing game time.\nUser indication of whether an entity is visible. …\nA <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …\nOnly cast rays against entities that are visible in the …\nShow overflowing items.\nAn entity with <code>Visibility::Visible</code> will be unconditionally …\nOnly cast rays against entities that are visible in the …\nSet this value in percent of the viewport width\nTrack minimum size should be a percent of the viewport’s …\nTrack maximum size should be a percent of the viewport’s …\nA pure white color.\nWakeUp\nA “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …\nThis type allows an <code>IterableCurve</code> valued in <code>f32</code> to be used …\nProvided a different number of weights and control points.\nThe left action button of the action pad (i.e. PS: Square, …\nThe winding order for a set of points\nThe defining <code>Component</code> for window entities, storing …\nAn event that is sent when a window is repositioned in …\nA <code>Plugin</code> that defines an interface for windowing support …\nDefines where a <code>Window</code> should be placed on the screen.\nThe size limits on a <code>Window</code>.\nFilter that selects entities with a component <code>T</code>.\nFilter that selects entities without a component <code>T</code>.\nUses the Unicode Line Breaking Algorithm. Lines will be …\nWraps at the word level, or fallback to character level if …\nStores and exposes operations on entities, components, …\nStruct for adding children to an entity directly through …\nMultiple lines, if needed.\nSame as <code>FlexWrap::Wrap</code> but new lines will appear before …\nIntrinsic two-axis rotation XYX\nExtrinsic two-axis rotation XYX\nIntrinsic three-axis rotation XYZ\nExtrinsic three-axis rotation XYZ\nIntrinsic two-axis rotation XZX\nExtrinsic two-axis rotation XZX\nIntrinsic three-axis rotation XZY\nExtrinsic three-axis rotation XZY\nCIE 1931 color space, also known as XYZ, with an alpha …\nA color in the XYZ color space with alpha.\nIntrinsic two-axis rotation YXY\nExtrinsic two-axis rotation YXY\nIntrinsic three-axis rotation YXZ\nExtrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nExtrinsic three-axis rotation YZX\nIntrinsic two-axis rotation YZY\nExtrinsic two-axis rotation YZY\nThe Z button.\nIndicates that this <code>Node</code> entity’s front-to-back ordering …\nIntrinsic three-axis rotation ZXY\nExtrinsic three-axis rotation ZXY\nIntrinsic two-axis rotation ZXZ\nExtrinsic two-axis rotation ZXZ\nIntrinsic three-axis rotation ZYX\nExtrinsic three-axis rotation ZYX\nIntrinsic two-axis rotation ZYZ\nExtrinsic two-axis rotation ZYZ\nA curve that combines the output data from two constituent …\nThe a axis. [-1.5, 1.5]\nThe ‘a’ channel. [-1.0, 1.0]\nAdaptors used by the Curve API for transforming and …\nAdditively blends the top element of the stack with the …\nInsert an asset similarly to <code>Assets::add</code>.\nAdds a single child.\nPushes children to the back of the builder’s children. …\nSets up a type implementing <code>ComputedStates</code>.\nAdds an <code>Event</code> that is automatically cleaned up when …\nSets up a type implementing <code>SubStates</code>.\nWhether or not to additively blend this input into the …\nA system that alters the weight of currently-playing …\nRun after all systems in <code>set</code>. If <code>set</code> has any systems that …\nRuns before all systems in <code>set</code>. If <code>set</code> has any systems …\nRun after all systems in <code>set</code>.\nRun after all systems in <code>set</code>.\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nReturn a the alpha component of this color.\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nThe alpha channel. [0.0, 1.0]\nReturns this material’s <code>AlphaMode</code>. Defaults to …\nHow to apply the alpha channel of the <code>base_color_texture</code>.\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\n<code>Anchor</code> point of the sprite in the world\nReturns a new run condition that only returns <code>true</code> if both …\nReturns a new run condition that only returns <code>true</code> if both …\nAll animations loaded from the glTF file.\nThe direction of increased roughness, in radians relative …\nIncreases the roughness along a specific direction, so …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nSamples the curve at the given time <code>t</code>, and pushes the …\nExecutes this command for the given <code>Entity</code>.\nApplies this command, causing it to mutate the provided …\nApplies a reflected value to this value.\nInstructs the executor to call <code>System::apply_deferred</code> on …\nApplies any <code>Deferred</code> system parameters (or other system …\nThe arc defining the sector\nThe arc defining the segment\nReturns the system’s archetype component <code>Access</code>.\nGet the area of the shape\nGet the surface area of the shape\nThe area that the projection covers relative to …\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nCasts this value to a form where it can be compared with …\nCasts this type to a reflected value.\nCasts this type to a mutable, reflected value.\nCasts this type to a fully-reflected value.\nCasts this type to a mutable, fully-reflected value.\nThe aspect ratio of the node (defined as <code>width / height</code>)\nThe aspect ratio (width divided by height) of the viewing …\nUsed to determine number of async compute threads to …\nThe resulting (non-absorbed) color after white light …\nHow far, on average, light travels through the volume …\nThe user defined axis settings.\nThe b axis. [-1.5, 1.5]\nThe ‘b’ channel. [-1.0, 1.0]\nThe background color, which serves as a “fill” for …\nThe color of the background that will fill the containing …\nThe background color that will fill the containing node\nThe color of the surface of the material before lighting.\nThe UV channel to use for the …\nThe texture component of the material’s color before …\nThe base shape of the extrusion\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRun before all systems in <code>set</code>.\nRun before all systems in <code>set</code>.\nThe blackness channel. [0.0, 1.0]\nBlends one or more values together.\nBlends the top element of the stack with the blend …\nThe blue channel. [0.0, 1.0]\nThe blue channel. [0.0, 1.0]\nBlurriness of the shadow\nThe sprite borders, defining the 9 sections of the image\nThe amount of space between the margins of a node and its …\nThe color of the Node’s border\nThe color of the Node’s border\nThe border radius of the node\nThe border radius of the node\nThe border radius of the node\nPixel padding to the bottom\nThe value corresponding to the bottom side of the UI rect.\nThe vertical position of the bottom edge of the node.\nExtract a <code>Distribution</code> whose samples are points of this …\nA direct scale factor multiplied with <code>color</code> before being …\nConfigures the <code>App</code> to which this plugin is added.\nConfigures the <code>Plugin</code>s that are to be added.\nBuilds a <code>Mesh</code> based on the configuration in <code>self</code>.\nRegisters any <code>World</code> access used by this <code>SystemParam</code> and …\nCreate a <code>SystemState</code> from a <code>SystemParamBuilder</code>. To create …\nPointer button pressed to trigger this event.\nPointer button lifted to trigger this event.\nPointer button pressed and lifted to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed and moved to trigger this event.\nPointer button pressed, moved, and lifted to trigger this …\nPointer button pressed to enter drag.\nPointer button pressed while dragging over.\nPointer button pressed while leaving drag.\nPointer button lifted to drop.\nMarker component that signals this node is a button\nThe user defined button axis settings.\nThe user defined button settings.\nBorrow this curve rather than taking ownership of it. This …\nManually bypasses change detection, allowing you to mutate …\nRaw data of the audio source.\nThe calculated size based on the given image\nThe “html canvas” element selector.\nDefines how the center part of the 9 slices will scale\nCreate a new <code>Curve</code> by composing this curve end-to-start …\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of system sets.\nCreate a new <code>Curve</code> by composing this curve end-to-start …\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of systems.\nChecks any <code>Tick</code>s stored on this system and wraps their …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nReturns a slice over the <code>Children</code> of the given <code>entity</code>.\nThe chroma channel. [0.0, 1.5]\nThe ‘chroma’ channel. [0.0, 1.0]\nThe circumcircle on which all vertices lie\nRuns after all plugins are built and finished, but before …\nRemoves all children from this entity. The <code>Children</code> …\nThe clear color operation to perform on the render target.\nAn extra thin translucent layer on top of the main PBR …\nThe roughness of the clearcoat material. This is specified …\nThe rect of the clip\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nReturns a boxed clone of this value.\nClones the value as a <code>Reflect</code> trait object.\nWhether to close windows when they are requested to be …\nPolynomial coefficients for the segment.\nThe coefficients matrix of the cubic curve.\nThe color of the box.\nThe tint color used to draw the image.\nDefault color strategy for all light gizmos.\nDefault color strategy for this light gizmo. if <code>None</code>, use …\nThe sprite’s color tint\nThe color of the fog effect.\nThe color of this light source.\nThe color of the light.\nThe color of the light.\nThe color of the outline.\nThe shadow’s color\nThe size of the gutters between items in a horizontal …\nPops the top value off the stack and writes it into the …\nReturns the system’s component <code>Access</code>.\nHow the alpha channel of textures should be handled while …\nComputes the next value of <code>State&lt;Self&gt;</code>. This function gets …\nUsed to determine number of compute threads to allocate\nComputed values for this camera, such as the projection …\nA mapping from node index to a bitfield specifying the …\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nGenerates a <code>Condition</code> that returns true when the passed …\nGenerates a <code>Condition</code> that returns true when the result of …\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nThe control points of the Bezier curve.\nThe control points of the Hermite curve.\nThe control points of the Cardinal spline\nThe control points of the spline\nThe control points of the NURBS\nCore data structures to be used internally in Curve …\nThe cosine of the rotation angle in radians.\nReturns the name of the crate the type is in, or <code>None</code> if …\nReturns a newly-instantiated <code>AnimationCurveEvaluator</code> for …\nWhether to cull the “front”, “back” or neither …\nThe cursor options of this window. Cursor icons are set …\nThe inner curve whose values are used to animate the …\nAn optional custom size for the sprite that will be used …\nReturn a darker version of this color. The <code>amount</code> should …\nContent of a font file as bytes\nDebug formatter for the value.\nConstructs an event at the debug level.\nCall <code>debug!</code> once per call site.\nConstructs a span at the debug level.\nBuild and return a <code>Self::Decoder</code> of the implementing type\nShould the window have decorations enabled?\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nThe default axis settings.\nThe default button axis settings.\nThe default button settings.\nThe default color for bounding box gizmos.\nThe default image sampler to use when …\nDefault scene to be displayed.\nReturns the system’s default system sets.\nReturns this material’s deferred fragment shader. If …\nUsed for selecting the deferred lighting pass for deferred …\nReturns this material’s deferred vertex shader. If …\nThe change in the position of the cursor since the last …\nThe change in position since the last move event.\nThe change in position since the last drag event.\nAdd a bias to the view depth of the mesh which can be used …\nHow closer to the camera than real geometry the line …\nAdjust rendered depth.\nThe depth clear operation to perform for the main 3d pass.\nThe depth map used for parallax mapping.\nThe texture usages for the depth texture created for the …\nOptional hint given to the rendering API regarding the …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nThe blurry image that represents diffuse radiance …\nThe amount of light transmitted <em>diffusely</em> through the …\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nThe direction of the ray.\nThe direction of the ray.\n<code>Color</code> to use for drawing a <code>DirectionalLight</code> gizmo when …\nColor used to modulate the influence of directional light …\nThe exponent applied to the directional light alignment …\nWhich layout algorithm to use when laying out this node’…\nThe total distance vector of a drag, measured from drag …\nThe vector of drag movement measured from start to final …\nAdd a run condition to each contained system.\nThe range of times for which this animation is defined.\nThe interval over which this curve is parametrized.\nSupport two-sided lighting by automatically flipping the …\nThe entity that was being dragged when the pointer entered …\nThe entity that was being dragged when the pointer was …\nThe entity that was being dragged when the pointer left …\nStores the starting and current locations for each entity …\nStores  the hit data for each entity currently being …\nDraws all bounding boxes in the scene when set to <code>true</code>.\nDraw a gizmo for all lights if true.\nslice draw size\nThe entity that was dropped onto the <code>target</code> entity.\nDuration for which sound will be played\nDuration between the pointer pressed and lifted for this …\nClones this <code>SystemSet</code>.\nFeeds this value into the given <code>Hasher</code>.\nA function that is run every time a hit is found. Ray …\nModule containing different easing functions to control …\nGets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …\nGets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…\nColor the material “emits” to the camera.\nThe UV channel to use for the …\nThe weight in which the camera exposure influences the …\nThe emissive map, multiplies pixels with <code>emissive</code> to get …\nReturns true if this sink has no more sounds to play.\nEnable state-scoped entity clearing for state <code>S</code>.\nSet to <code>false</code> to stop drawing gizmos.\nSpecifies which window control buttons should be enabled.\nAdds a command to be executed, like <code>Commands::queue</code>.\nThe state being entered.\nThe state being entered.\nEntities contained in the dynamic scene.\nThe unique identifier of the entity as a fallback.\nTarget entity\nTarget entity\nThe cubemaps that make up this environment map.\nConstructs an event at the error level.\nCall <code>error!</code> once per call site.\nConstructs a span at the error level.\nThe <code>EvaluatorId</code> used to look up the <code>AnimationCurveEvaluator</code>…\nReturns the type ID of the <code>AnimationCurveEvaluator</code>.\nAdditional event-specific data. <code>DragDrop</code> for example, has …\nWhether to exit the app when there are no open windows.\nThe state being exited.\nThe state being exited.\nA system that removed transitions that have completed from …\nDetermines which falloff mode to use, and its parameters.\nThe distance from the camera in world units of the viewing …\nThe distance of the far clipping plane in world units.\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field with …\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple struct.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nThe default file path to use (relative to the project …\nA predicate that is applied for every entity that ray …\nFinish adding this plugin to the <code>App</code>, once all plugins …\nWhether or not to fit the canvas element’s size to its …\nThe initial length of a flexbox in the main axis, before …\nWhether a Flexbox container should be a row or a column. …\nDefines how much a flexbox item should grow if there’s …\nDefines how much a flexbox item should shrink if there’s …\nWhether a Flexbox container should wrap its contents onto …\nFlip this curve so that its tuple output is arranged the …\nNormal map textures authored for DirectX have their …\nWhether the image should be flipped along its x-axis.\nFlip the sprite along the <code>X</code> axis\nWhether the image should be flipped along its y-axis.\nFlip the sprite along the <code>Y</code> axis\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nGet/set whether the window is focused.\nWhether to enable fog for this material.\nThe specific font face to use, as a <code>Handle</code> to a <code>Font</code> asset.\nThe vertical height of rasterized glyphs in the font atlas …\nThe antialiasing method to use when rendering text.\nDescribes how hard the screen was pressed.\nCreate a new <code>Curve</code> repeating this curve forever, producing …\nThe vertical field of view (FOV) in radians.\nReturns this materials fragment shader. If …\nReturns this material’s fragment shader. If …\nFrequency at which sound will be played\nConvert from an f32 array\nConvert from an f32 array without the alpha value\nConstructs a concrete instance of <code>Self</code> from a reflected …\nConstruct a value of this type uniformly at random using …\nConvert from [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert from a Vec3\nConvert from a Vec4\nCreates <code>Self</code> using data from the given <code>World</code>.\nMakes the window content appear behind the titlebar.\nGets this <code>Bundle</code>’s component ids. This will be <code>None</code> if …\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nGets the tick indicating the last time this system ran.\nRetrieves the property from the given <code>entity</code>.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nWill return <code>None</code> if <code>TypeInfo</code> is not available.\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nThe global transform of the entity.\nGlobal transform of the scene root entity.\nGlobal transform of the scene root entity.\nThe absolute transform of the sprite. This should …\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the entity.\nCreate a new <code>Curve</code> which is the graph of this one; that …\nThe <code>petgraph</code> data structure that defines the animation …\nCorresponds to the <code>graph</code> field on <code>AnimationGraph</code>.\nReturns a grey color with the provided lightness from (0.0 …\nThe green channel. [0.0, 1.0]\nThe green channel. [0.0, 1.0]\nDefines the size of implicitly created columns. Columns …\nControls whether automatically placed grid items are …\nDefines the size of implicitly created rows. Rows are …\nThe column in which a grid item starts and how many …\nThe row in which a grid item starts and how many rows it …\nDefines the number of columns a grid has and the sizes of …\nDefines the number of rows a grid has and the sizes of …\nHalf the angle defining the arc\nHalf of the depth of the extrusion\nSize of the horizontal and vertical diagonals of the …\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width and height of the plane\nHalf of the width, height and depth of the cuboid\nReturns true if system has deferred buffers.\nToggles drawing the drop shadow behind the window.\nIf this is set to <code>true</code>, the camera will use an …\nThe ideal height of the node. <code>height</code> is used when it is …\nThe height of the cone\nThe height of the frustum\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the picking intersection.\nInformation about the latest prior picking intersection.\nInformation about the picking intersection.\nReturn the hue of this color [0.0, 360.0].\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe hue channel. [0.0, 360.0]\nThe ‘hue’ channel. [0.0, 360.0]\nThe unique identifier of the finger.\nList of <code>ComponentId</code>s to ignore when reporting system order …\nIlluminance in lux (lumens per square meter), representing …\nThe image of the node.\nThe image of the node\nHandle to the texture.\nThe image used to render the sprite\nControls how the image is altered to fit within the layout …\nHow the sprite’s image will be scaled.\nThe size of the image in pixels\nShould the window use Input Method Editor?\nSets location of IME candidate box in client area …\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nTexture atlas section index\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nInherited visibility of an entity.\nInherited visibility of the scene root entity.\nInherited visibility of the scene root entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nThe inherited visibility of the entity.\nInitializes the given <code>Asset</code> in the <code>App</code> by:\nInitializes the given loader in the <code>App</code>’s <code>AssetServer</code>.\nRegisters <code>GizmoConfigGroup</code> in the app enabling the use of …\nInitializes a <code>State</code> with standard starting values.\nInitialize the system.\nAngle defining the distance from the spot light direction …\nThe inner circle of the annulus\nInserts children at the given index.\nInsert a <code>GizmoConfig</code> into a specific <code>GizmoConfigGroup</code>.\nInserts a specific <code>State</code> to the current <code>App</code> and overrides …\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nScale factor applied to the diffuse and specular light …\nDescribes whether and how the button has been interacted …\nExtract a <code>Distribution</code> whose samples are points of this …\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nStores internal state that isn’t directly accessible.\nInterpolates between <code>a</code> and <code>b</code> with  a interpolation factor …\nInterpolate between this value and the <code>other</code> given value …\nA version of <code>interpolate_stable</code> that assigns the result to …\nEvaluates a cubic Bézier curve at a value <code>t</code>, given two …\nGiven <code>start</code> and <code>end</code> values, produce a curve with unlimited …\nThe <code>Interval</code> type for nonempty intervals used by the <code>Curve</code> …\nCreate an <code>Interval</code> with a given <code>start</code> and <code>end</code>. Alias of …\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nConvert into a <code>SystemConfigs</code>.\nCasts this type to a boxed, reflected value.\nCasts this type to a boxed, fully-reflected value.\nTurns this value into its corresponding <code>System</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nUsed to determine number of IO threads to allocate\nThe index of refraction of the material.\nIf this is set to <code>true</code>, this camera will be rendered to …\nReturns <code>true</code> if this value was added after the system last …\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this value was added or mutably …\nIndicates whether or not this type is a <em>dynamic</em> type.\nEnables and disables all picking features.\nReturns true if the system must be run exclusively.\nEnables and disables updating interaction states of …\nIs the alpha component of this color greater than or equal …\nIs the alpha component of this color less than or equal to …\nIf this is set to <code>false</code> and <code>should_block_lower</code> is set to …\nEnables and disables input collection.\nShould mouse inputs be updated?\nIs this sink paused?\nReturns true if the system is <code>Send</code>.\nShould touch inputs be updated?\nIf the plugin can be meaningfully instantiated several …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nReturns an <code>Iterator</code> of <code>Entity</code>s over the leaves of the …\nReturns an <code>Iterator</code> of <code>Entity</code>s over the <code>entity</code>s immediate …\nIterable curves, which sample in the form of an iterator …\nThe text’s internal alignment. Should not affect its …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nThe width of the domain of this segment.\nKnots\nReturns the change tick recording the time this data was …\nReturns the latest state transition event of type <code>S</code>, if …\nThe latest position of the pointer during this drag, used …\nTexture atlas layout handle\nPixel padding to the left\nThe value corresponding to the left side of the UI rect.\nThe horizontal position of the left edge of the node.\nLeft ear position relative to the <code>GlobalTransform</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nConstants for operating with the light units: lumens, and …\nMarks this environment map as a light probe.\nReturn a lighter version of this color. The <code>amount</code> should …\nThe exposure (brightness) level of the lightmap, if …\nThe lightness channel. [0.0, 1.0]\nThe lightness channel. [0.0, 1.5]\nThe lightness channel. [0.0, 1.5]\nThe ‘lightness’ channel. [0.0, 1.0]\nThe ‘lightness’ channel. [0.0, 1.0]\nDescribe how lines should join\nApply perspective to gizmo lines.\nDetermine the style of gizmo lines.\nLine width specified in pixels.\nHow the text should linebreak when running out of the …\nLoad an asset similarly to <code>AssetServer::load</code>.\nLoad an asset with settings, similarly to …\nThe transform of the entity.\nReturn the luminance of this color (0.0 - 1.0).\nThe distance from the center of the torus to the center of …\nCreate a new curve by mapping the values of this curve via …\nPass the output of this system into the passed function <code>f</code>, …\nMap an entity to another entity\nThe amount of space around a node outside its border.\nWidth of the margin on each edge of the visual box in …\nA bitfield specifying the mask groups that this node and …\nCorresponds to the <code>mask</code> field on <code>AnimationGraphNode</code>.\nThe mask groups that each animation target (bone) belongs …\nCorresponds to the <code>mask_groups</code> field on <code>AnimationGraph</code>.\nThe <code>UiMaterial</code> used to render the node.\nAll materials loaded from the glTF file.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nDefines the maximum scale of the 4 corner slices (default …\nThe maximum height the window can have.\nThe maximum height of the node. <code>max_height</code> is used if it …\nIn how many layers to split the depth maps for parallax …\nIf the number of physical cores is greater than …\nThe maximum width the window can have.\nThe maximum width of the node. <code>max_width</code> is used if it is …\nCreates a <code>Mesh</code> for a shape.\nAll meshes loaded from the glTF file.\nHow/If asset meta files should be checked.\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nThe UV channel to use for the …\nMetallic and roughness maps, stored as a single texture.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum height the window can have.\nThe minimum height of the node. <code>min_height</code> is used if it …\nIf the number of physical cores is less than …\nThe minimum width the window can have.\nThe minimum width of the node. <code>min_width</code> is used if it is …\nThe radius of the tube of the torus\nLinearly interpolate between this and another color, by …\nLinearly interpolate between this and another color, by …\nThe desired playback behavior.\nWhich fullscreen or windowing mode should be used.\nThe <code>AssetMode</code> to use for this server.\nReturns the path to the module the type is in, or <code>None</code> if …\nEnables click-and-drag behavior for the entire window, not …\nIf this is enabled, a previous camera exists that shares …\nReturns the system’s name.\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nA <code>Name</code> that the entity might have that is displayed if …\nStores the application ID (on <strong><code>Wayland</code></strong>), <code>WM_CLASS</code> (on <strong><code>X11</code></strong>) …\nReturns the name of the field with index <code>index</code>.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nNamed skins loaded from the glTF file.\nReturns a new run condition that only returns <code>false</code> if …\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nControls the layout (size and position) of the node and …\nAnimation node data specific to the type of node (clip, …\nCorresponds to the <code>node_type</code> field on <code>AnimationGraphNode</code>.\nAll nodes loaded from the glTF file.\nReturns a new run condition that only returns <code>true</code> if both …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nThe UV channel to use for the …\nUsed to fake the lighting of bumps and dents on a material.\nGenerates a <code>Condition</code> that inverses the result of passed …\nThe UV channel to use for the …\nSpecifies the level of exposure to ambient light.\noffset of the slice\nThe amount of space between a node’s outline the edge of …\nHow far across the node is scrolled, in logical pixels. (0 …\nHow far down the node is scrolled, in logical pixels. (0 = …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nCall some expression only once per call site.\nReturns if this material should be rendered by the …\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nThis mod re-exports the correct versions of floating-point …\nReturns a new run condition that returns <code>true</code> if either …\nReturns a new run condition that returns <code>true</code> if either …\nCameras with a higher order are rendered later, and thus …\nThe origin of the ray.\nThe origin of the ray.\nAngle defining the distance from the spot light direction …\nThe outer circle of the annulus\nThe <code>CameraOutputMode</code> for this camera.\nWhether overflowing content should be displayed or clipped.\nHow the bounds of clipped content should be determined\nThe amount of space between the edges of a node and its …\nHow deep the offset introduced by the depth map should be.\nWhich parallax mapping method to use.\nReturns the parent <code>Entity</code> of the given <code>entity</code>, if any.\nParent entity to add the child to.\nReturns the parent entity.\nReturns a statically typed reference to the value …\nReturns a statically typed mutable reference to the value …\nPauses playback of this sink.\nCreate the sink in paused state. Useful for “deferred …\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nGet the perimeter of the shape\nThe phase of the touch input.\nCreate a new <code>Curve</code> chaining the original curve with its …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nResumes playback of a paused sink.\n<code>Color</code> to use for drawing a <code>PointLight</code> gizmo when …\nPressing and dragging state, organized by pointer and …\nDispatches interaction events to the target entities.\nThe pointer that triggered this event\nThe location of the pointer during this event\nThe cursor position in logical pixels.\nWhere the window moved to in physical pixels.\nWhere the window should be placed.\nThe position of the finger on the touchscreen.\nWhether a node should be laid out in-flow with, or …\nControls if the prepass is enabled for the Material. For …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass vertex shader. If …\nPreregisters a loader for the given extensions, that will …\nWhat presentation mode to give the window.\nStores the press location and start time for each button …\nWhether or not to stop events from propagating out of the …\nSettings for the primary window.\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nThe default file path to use (relative to the project …\nThe property selector, which defines what component to …\nPushes the current value of the blend register onto the …\nEnqueues any <code>Deferred</code> system parameters (or other system …\nSimulates a light source coming from a spherical volume …\nSimulates a light source coming from a spherical volume …\nThe radius of the circle\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nCut-off for the light’s area-of-effect. Fragments …\nRange in meters that this light illuminates.\nDetermines how mesh picking should consider <code>Visibility</code>. …\nReturns whether the material would like to read from …\nHas the plugin finished its setup? This can be useful for …\nSets whether this window recognizes <code>DoubleTapGesture</code>\nSets whether this window recognizes <code>PanGesture</code>, with a …\nSets whether this window recognizes <code>PinchGesture</code>\nSets whether this window recognizes <code>RotationGesture</code>\nAn optional rectangle representing the region of the image …\nAn optional rectangle representing the region of the sprite…\nThe red channel. [0.0, 1.0]\nThe red channel. [0.0, 1.0]\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a mutable enumeration of “kinds” of type.\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nSpecular intensity for non-metals on a linear scale of …\nRegisters the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.\nRegisters the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…\nRegisters the asset type <code>T</code> using <code>[App::register]</code>, and adds …\nRegisters the given <code>AssetSourceBuilder</code> with the given <code>id</code>.\nCalled when registering this component, allowing mutable …\nThis function sets up systems that compute the state …\nSets up the systems needed to compute <code>T</code> whenever any <code>State</code> …\nRegisters components that are required by the components …\nRegisters required components.\nThis function sets up systems that compute the state …\nSets up the systems needed to compute whether <code>T</code> exists …\nRegisters the state type <code>T</code> using <code>App::register_type</code>, and …\nRegisters the state type <code>T</code> using <code>App::register_type</code>, and …\nRemap <code>self</code> from the input range to the output range.\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nMake this entity parentless while preserving this entity’…\nDescribes which rendering layers gizmos will be rendered …\nCreate a new <code>Curve</code> whose parameter space is related to the …\nReparametrize this <code>Curve</code> by sampling from another curve.\nLinearly reparametrize this <code>Curve</code>, producing a new curve …\nCreate a new <code>Curve</code> repeating this curve <code>N</code> times, producing …\nRemoves all current children from this entity, replacing …\nOverwrites this smart pointer with the given value, if and …\nWhen set to <code>true</code> ray casting will only happen between …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nResample this <code>Curve</code> to produce a new one that is defined …\nShould the window be resizable?\nThe limits of the window’s logical size (found in its …\nWhat resolution the window should have.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nResources stored in the dynamic scene.\nCreate a new <code>Curve</code> inverting this curve on the x-axis, …\nPixel padding to the right\nThe value corresponding to the right side of the UI rect.\nThe horizontal position of the right edge of the node.\nRight ear position relative to the <code>GlobalTransform</code>.\nThe index of the root node in the animation graph.\nCorresponds to the <code>root</code> field on <code>AnimationGraph</code>.\nReturns the topmost ancestor of the given <code>entity</code>.\nReturn a new version of this color with the hue channel …\nRotation of the entity.\nThe rotational part of a two-dimensional isometry.\nThe rotational part of a three-dimensional isometry.\nWorld space rotation applied to the environment light …\nThe size of the gutters between items in a vertical …\nExecutes this system once. See <code>System::run</code> or …\nRuns the system with the given input in the world.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nA <code>Condition</code>-satisfying system that returns <code>true</code> on the …\nRuns this system with the given input in the world.\nRuns the system with the given input in the world. Unlike …\nSample a point on this curve at the parameter value <code>t</code>, …\nUniformly sample a point from the surface of this shape, …\nSample a point on this curve at the parameter value <code>t</code>, …\nSample-interpolated curves constructed using the <code>Curve</code> API.\nUniformly sample a point from inside the area/volume of …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a collection of <code>n &gt;= 0</code> points on this curve at the …\nSample a point on this curve at the parameter value <code>t</code>, …\nThe <code>ImageSampler</code> to use during rendering.\nExtract an iterator over evenly-spaced samples from this …\nThe saturation channel. [0.0, 1.0]\nThe saturation channel. [0.0, 1.0]\nScale of the entity.\nScales the projection.\nHow the projection will scale to the viewport.\nHandle to the scene to spawn.\nHandle to the scene to spawn.\nAll scenes loaded from the glTF file.\nThe quality of the screen space specular transmission blur …\nHow many individual steps should be performed in the …\nThe scroll position of the node,\nReturns a serializable version of the value.\nPerforms a type-checked assignment of a reflected value to …\nSets the value of the given <code>Plugin</code>, if it exists\nSets the alpha component of this color.\nFlags this value as having been changed.\nSets the default asset processor for the given <code>extension</code>.\nSets the hue of this color.\nOverwrites this smart pointer with the given value, if and …\nManually sets the change tick recording the time when this …\nOverwrites the tick indicating the last time this system …\nSets the parent of this entity.\nChange this entity’s parent while preserving this entity…\nChanges the speed of the sound.\nSets the next state the app should move to.\nChanges the volume of the sound.\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nA bias used when sampling shadow maps to avoid “…\nA value that adjusts the tradeoff between self-shadowing …\nA value that adjusts the tradeoff between self-shadowing …\nThe distance from the light to near Z plane in the shadow …\nThe distance from the light to the near Z plane in the …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nControls if shadows are enabled for the Material.\nWhether this light casts shadows.\nWhether this light casts shadows.\nWhether this light casts shadows.\nReturns a short, pretty-print enabled path to the type.\nShould this entity block entities below it from being …\nThis function gets called whenever one of the <code>SourceStates</code> …\nThe number of sides\nDefines how the 4 side parts of the 9 slices will scale\nThe sine of the rotation angle in radians.\nTotal size of texture atlas.\nAll skins loaded from the glTF file.\nSets whether the window should be shown in the taskbar.\nSmoothly nudge this value towards the <code>target</code> at a given …\nA mapping from each parent node index to the range within …\nA list of the children of each node, sorted in ascending …\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nThe gltf root of the gltf asset, see …\nEnables spatial audio for this source.\nContains a transform that specifies the position of this …\nOptional scale factor applied to the positions of this …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nThe typically-sharper, mipmapped image that represents …\nThe amount of light transmitted <em>specularly</em> through the …\nGets the speed of the sound.\nSpeed to play at.\n<code>Color</code> to use for drawing a <code>SpotLight</code> gizmo when …\nHow much the shadow should spread outward.\nSpecifies the rendering properties of the sprite, such as …\nThe position of the pointer at drag start.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nStops the sink.\nIf set, this camera will be a sub camera of a large view, …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nMarker component that indicates that its entity needs to …\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nAttempts to downcast the given value to <code>Self</code> using, …\nThe original target of this picking event, before bubbling\nThe “target” that this camera will render to.\nOptions for the <code>TaskPool</code> created at application start.\nTension\nThe (optional) texture atlas used to render the image.\nThe (optional) texture atlas used to render the sprite\nMaps from a specific image handle to the index in <code>textures</code> …\ntexture area to draw\nThe specific areas of the atlas where each texture can be …\nThickness of the volume beneath the material surface.\nA cached postorder traversal of the graph.\nStores the title of the window.\nToggles showing the traffic light window buttons.\nToggles showing the window title.\nToggles drawing the titlebar.\nMakes the titlebar transparent, allowing the app content …\nBuild a <code>CubicCurve</code> by computing the interpolation …\nBuild a <code>RationalCurve</code> by computing the interpolation …\nBuild a cyclic <code>CubicCurve</code> by computing the interpolation …\nConvert to an f32 array\nConvert to an f32 array without the alpha value\nConvert to [u8; 4] where that makes sense (Srgba is most …\nConvert to [u8; 3] where that makes sense (Srgba is most …\nConvert to a Vec3\nConvert to a Vec4\nToggles the playback of this sink.\nPixel padding to the top\nThe value corresponding to the top side of the UI rect.\nThe vertical position of the top edge of the node.\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nTransform of the scene root entity.\nTransform of the scene root entity.\nThe local transform of the sprite, relative to its parent.\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the entity.\nTransform a point.\nPosition of the entity. In 2d, the last value of the <code>Vec3</code> …\nThe translational part of a two-dimensional isometry.\nThe translational part of a three-dimensional isometry.\nShould the window be transparent?\nTries to <code>apply</code> a reflected value to this value.\nAttempts to cast this type to a fully-reflected value.\nAttempts to cast this type to a mutable, fully-reflected …\nSimilar to <code>Self::despawn_descendants</code> but does not emit …\nSimilar to <code>Self::despawn_recursive</code> but does not emit …\nAttempts to cast this type to a boxed, fully-reflected …\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the fully qualified path of the underlying type.\nWhether to apply only the base color to this material.\nUpdate the system’s archetype component <code>Access</code>.\nThe schedule that will be run by <code>update</code>.\nThe transform applied to the UVs corresponding to …\nSafe version of <code>System::validate_param_unsafe</code>. that runs …\nValidates that all parameters can be acquired and that …\nThe input value to be blended.\nContent of the extra data.\nThe value channel. [0.0, 1.0]\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this material’s vertex shader. If …\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle.\nThe vertices of the tetrahedron.\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nThe view visibility of the entity.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser-driven visibility of the scene root entity.\nUser-driven visibility of the scene root entity.\nUser indication of whether an entity is visible\nDetermines how ray casting should consider <code>Visibility</code>.\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nThe visibility of the entity.\nThe visibility of the entity.\nSets the window’s visibility.\nVisible unclipped area\nGets the volume of the sound.\nGet the volume of the shape\nVolume to play at.\nThe global volume of all audio.\nWhether or not this command should output a warning if the …\nWhether or not this command should output a warning if the …\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\nIf set, will override the default “watch for changes” …\nThe individual item’s weight. This may not be bound to …\nThe weight of this node, which signifies its contribution …\nCorresponds to the <code>weight</code> field on <code>AnimationGraphNode</code>.\nThe homogeneous weight coefficients.\nWeights\nThe whiteness channel. [0.0, 1.0]\nThe ideal width of the node. <code>width</code> is used when it is …\nThe width of the outline.\nWindow that the cursor moved inside.\nWindow that the cursor entered.\nWindow that the cursor left.\nWindow that moved.\nThe window entity registering the touch.\nWhere should the window appear relative to other …\nSets a specific theme for the window.\nReturn a new version of this color with the given alpha …\nSpawns the passed bundle and adds it to this entity as a …\nTakes a closure which builds children for this entity …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nReturn a new version of this color with the hue channel …\nReturn a new version of this color with the given …\nThe world of the scene, containing its entities and …\nConverts a <code>SystemInput::Inner</code> into a <code>SystemInput::Param</code>.\nThe x-axis. [0.0, 1.0]\nWhether to show or clip overflowing items on the x axis\nHorizontal offset\nReturns a new run condition that only returns <code>true</code> if <code>self</code> …\nReturns a new run condition that only returns <code>true</code> if …\nThe y-axis, intended to represent luminance. [0.0, 1.0]\nWhether to show or clip overflowing items on the y axis\nVertical offset\nThe z-axis. [0.0, 1.0]\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nCreate a new <code>Curve</code> by zipping this curve together with …\nExpected number of knots\nExpected number of weights\nProvided number of knots\nProvided number of weights\nThe number of control points provided\nPath to the file that was dropped in.\nPath to the file that might be dropped in.\nWindow the file was dropped into.\nWindow a file is possibly going to be dropped into.\nWindow that had a canceled file drop.\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nIndex of this material\nUsed to set the <code>Face</code> of the material, useful if it is used …\nIndex of the mesh for this primitive\nIndex of the mesh for this primitive\nIndex of this primitive in its parent mesh\nIndex of this primitive in its parent mesh\nCursor begin and end position.\nCurrent value.")